given non negative integer num represented string remove digits number new number smallest possible note length num less will ge given num contain leading zero example input num output explanation remove three digits form new number smallest example input num output explanation remove leading number note output must contain leading zeroes example input num output explanation remove digits number left nothing
given binary tree return preorder traversal nodes values example given binary tree return note recursive solution trivial iteratively
given many structurally unique bst binary search trees store values example given total unique bst
given grid filled non negative numbers find path top left bottom right minimizes sum numbers along path note can move either right point time
given complete binary tree count number nodes definition complete binary tree wikipedia complete binary tree every level except possibly last completely filled nodes last level far left possible can nodes inclusive last level
follow search rotated sorted array duplicates allowed affect run time complexity suppose array sorted ascending order rotated pivot unknown beforehand might become write function determine given target array array may contain duplicates
given array positive integers positive integer find minimal length contiguous subarray sum ≥ isn one return instead example given array subarray minimal length problem constraint click show practice practice figured solution try coding another solution time complexity log credits special thanks freezen adding problem creating test cases
given array integers ≤ ≤ size array elements appear twice others appear find elements inclusive appear array without extra space runtime may assume returned list count extra space example input output
given binary tree return inorder traversal nodes values example given binary tree null return note recursive solution trivial iteratively
given index return kth row pascal triangle example given return note optimize algorithm use extra space
you given map form two dimensional integer grid represents land represents water grid cells connected horizontally vertically diagonally grid completely surrounded water exactly one island one connected land cells island doesn lakes water inside isn connected water around island one cell square side length grid rectangular width height don exceed determine perimeter island example  answer explanation perimeter yellow stripes image
two elements binary search tree bst swapped mistake recover tree without changing structure note solution using space pretty straight forward devise constant space solution
given non negative integers representing elevation map width bar compute much water able trap raining example given return elevation map represented array case units rain water blue section trapped thanks marcos contributing image
given two strings write function determine anagram example anagram nagaram return true rat car return false note may assume string contains lowercase alphabets follow inputs contain unicode characters adapt solution case
given board word find word exists grid word can constructed letters sequentially adjacent cell adjacent cells horizontally vertically neighboring letter cell may used example given board word abcced returns true word see returns true word abcb returns false
given string consists lowercase uppercase letters find length longest palindromes can built letters case sensitive example aa considered palindrome note assume length given string will exceed example input abccccdd output explanation one longest palindrome can built dccaccd whose length
given two strings determine isomorphic two strings isomorphic characters can replaced get occurrences character must replaced another character preserving order characters two characters may map character character may map example given egg add return true given foo bar return false given paper title return true note may assume length
given binary tree find maximum depth maximum depth number nodes along longest path root node farthest leaf node
given array integers find array contains duplicates function return true value appears least twice array return false every element distinct
design data structure supports following operations average time note duplicate elements allowed insert val inserts item val collection remove val removes item val collection present getrandom returns random element current collection elements probability element returned linearly related number value collection contains example init empty collection randomizedcollection collection new randomizedcollection inserts collection returns true collection contain collection insert inserts another collection returns false collection contained collection now contains collection insert inserts collection returns true collection now contains collection insert getrandom return probability returns probability collection getrandom removes collection returns true collection now contains collection remove getrandom return equally likely collection getrandom
given set non overlapping intervals insert new interval intervals merge necessary may assume intervals initially sorted according start times example given intervals insert merge example given insert merge new interval overlaps
a linked list given node contains additional random pointer point node list null return deep copy list
given array integers le le size array elements appear twice others appear find elements appear twice array without extra space runtime example input output
in llp world hero called teemo attacking can make enemy ashe poisoned condition now given teemo attacking ascending time series towards ashe poisoning time duration per teemo attacking need output total time ashe poisoned condition may assume teemo attacks beginning specific time point makes ashe poisoned condition immediately example input output explanation time point teemo starts attacking ashe makes ashe poisoned immediately poisoned status will last seconds end time point time point teemo attacks ashe causes ashe poisoned status another seconds finally need output example input output explanation time point teemo starts attacking ashe makes ashe poisoned poisoned status will last seconds end time point however beginning time point teemo attacks ashe already poisoned status since poisoned status won add together though second poisoning attack will still work time point will stop end time point finally need output note may assume length given time series array won exceed may assume numbers teemo attacking time series poisoning time duration per attacking non negative integers won exceed
given array integers integer need find number unique diff pairs array diff pair defined integer pair numbers array absolute difference example input output explanation two diff pairs array although two input return number unique pairs example input output explanation four diff pairs array example input output explanation one diff pair array note pairs count pair length array won exceed integers given input belong range
according wikipedia article game life also known simply life cellular automaton devised british mathematician john horton conway given board cells cell initial state live dead cell interacts eight neighbors horizontal vertical diagonal using following four rules taken wikipedia article live cell fewer two live neighbors dies caused population live cell two three live neighbors lives next generation live cell three live neighbors dies population dead cell exactly three live neighbors becomes live cell reproduction write function compute next state one update board given current state follow solve place remember board needs updated time update cells first use updated values update cells question represent board using array principle board infinite cause problems active area encroaches border array address problems credits special thanks jianchao li fighter adding problem creating test cases
given linked list return node cycle begins cycle return null note modify linked list follow can solve without using extra space
given set distinct integers nums return possible subsets note solution set must contain duplicate subsets example nums solution
design simplified version twitter users can post tweets follow unfollow another user able see recent tweets user news feed design support following methods posttweet userid tweetid compose new tweet getnewsfeed userid retrieve recent tweet ids user news feed item news feed must posted users user followed user tweets must ordered recent least recent follow followerid followeeid follower follows followee unfollow followerid followeeid follower unfollows followee example twitter twitter new twitter user posts new tweet twitter posttweet user news feed return list tweet twitter getnewsfeed user follows user twitter follow user posts new tweet twitter posttweet user news feed return list tweet ids tweet precede tweet posted tweet twitter getnewsfeed user unfollows user twitter unfollow user news feed return list tweet since user longer following user twitter getnewsfeed
given binary tree struct treelinknode treelinknode left treelinknode right treelinknode next populate next pointer point next right node next right node next pointer set null initially next pointers set null note may use constant extra space may assume perfect binary tree ie leaves level every parent two children example given following perfect binary tree calling function tree look like null null null
given set candidate numbers without duplicates target number find unique combinations candidate numbers sums repeated number may chosen unlimited number times note numbers including target will positive integers solution set must contain duplicate combinations example given candidate set target solution set
given string contains lowercase letters remove duplicate letters every letter appear must make sure result smallest lexicographical order among possible results example given bcabc return abc given cbacdcbc return acdb credits special thanks dietpepsi adding problem creating test cases
merge two sorted linked lists return new list new list made splicing together nodes first two lists
given binary matrix filled find largest rectangle containing return area example given following matrix  return
given collection intervals merge overlapping intervals example given return
given integer generate square matrix filled elements spiral order example given return following matrix
given binary tree imagine standing right side return values nodes can see ordered top bottom example given following binary tree  return credits special thanks amrsaqr adding problem creating test cases
given integer generate structurally unique bst binary search trees store values example given program return unique bst shown
given array containing distinct numbers taken find one missing array example given nums return note algorithm run linear runtime complexity implement using constant extra space complexity credits special thanks jianchao li fighter adding problem creating test cases
given linked list swap every two adjacent nodes return head example given return list algorithm use constant space may modify values list nodes can changed
write function delete node except tail singly linked list given access node supposed linked list given third node value linked list become calling function
you given two non empty linked lists representing two non negative integers digits stored reverse order nodes contain single digit add two numbers return linked list may assume two numbers contain leading zero except number input output
