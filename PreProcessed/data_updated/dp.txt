given a collection of numbers that might contain duplicates return all possible unique permutations for example have the following unique permutations
given a list of non negative numbers and a target integer k write a function to check if the array has a continuous subarray of size at least that sums up to the multiple of k that is sums up to n k where n is also an integer example input k output true explanation because is a continuous subarray of size and sums up to example input k output true explanation because is an continuous subarray of size and sums up to note the length of the array won't exceed you may assume the sum of all the numbers is in the range of a signed bit integer
implement wildcard pattern matching with support for '?' and ' ' '?' matches any single character ' ' matches any sequence of characters including the empty sequence the matching should cover the entire input string not partial the function prototype should be bool ismatch const char s const char p some examples ismatch aa a → false ismatch aa aa → true ismatch aaa aa → false ismatch aa → true ismatch aa a → true ismatch ab ? → true ismatch aab c a b → false
you are a professional robber planning to rob houses along a street each house has a certain amount of money stashed the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night given a list of non negative integers representing the amount of money of each house determine the maximum amount of money you can rob tonight without alerting the police credits special thanks to ifanchu for adding this problem and creating all test cases also thanks to ts for adding additional test cases
given a set of candidate numbers c without duplicates and a target number t find all unique combinations in c where the candidate numbers sums to t the same repeated number may be chosen from c unlimited number of times note all numbers including target will be positive integers the solution set must not contain duplicate combinations for example given candidate set and target a solution set is
given n how many structurally unique bst's binary search trees that store values n? for example given n there are a total of unique bst's
suppose you have n integers from to n we define a beautiful arrangement as an array that is constructed by these n numbers successfully if one of the following is true for the ith position ≤ i ≤ n in this array the number at the ith position is divisible by i i is divisible by the number at the ith position now given n how many beautiful arrangements can you construct? example input output explanation the first beautiful arrangement is number at the st position i is and is divisible by i i number at the nd position i is and is divisible by i i the second beautiful arrangement is number at the st position i is and is divisible by i i number at the nd position i is and i i is divisible by note n is a positive integer and will not exceed
given a d binary matrix filled with 's and 's find the largest rectangle containing only 's and return its area for example given the following matrix  return
given a string s find the longest palindromic subsequence's length in s you may assume that the maximum length of s is example input bbbab output one possible longest palindromic subsequence is bbbb example input cbbd output one possible longest palindromic subsequence is bb
you have a number of envelopes with widths and heights given as a pair of integers w h one envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope what is the maximum number of envelopes can you russian doll? put one inside other example given envelopes the maximum number of envelopes you can russian doll is
note this is an extension of house robber after robbing those houses on that street the thief has found himself a new place for his thievery so that he will not get too much attention this time all houses at this place are arranged in a circle that means the first house is the neighbor of the last one meanwhile the security system for these houses remain the same as for those in the previous street given a list of non negative integers representing the amount of money of each house determine the maximum amount of money you can rob tonight without alerting the police credits special thanks to freezen for adding this problem and creating all test cases
given a triangle find the minimum path sum from top to bottom each step you may move to adjacent numbers on the row below for example given the following triangle the minimum path sum from top to bottom is i e note bonus point if you are able to do this using only o n extra space where n is the total number of rows in the triangle
implement regular expression matching with support for ' ' and ' ' ' ' matches any single character ' ' matches zero or more of the preceding element the matching should cover the entire input string not partial the function prototype should be bool ismatch const char s const char p some examples ismatch aa a → false ismatch aa aa → true ismatch aaa aa → false ismatch aa a → true ismatch aa → true ismatch ab → true ismatch aab c a b → true
find the kth largest element in an unsorted array note that it is the kth largest element in the sorted order not the kth distinct element for example given and k return note you may assume k is always valid ≤ k ≤ array's length credits special thanks to mithmatt for adding this problem and creating all test cases
say you have an array for which the ith element is the price of a given stock on day i design an algorithm to find the maximum profit you may complete at most two transactions note you may not engage in multiple transactions at the same time ie you must sell the stock before you buy again
given a collection of integers that might contain duplicates nums return all possible subsets note the solution set must not contain duplicate subsets for example if nums a solution is
given a string s we may represent it as a binary tree by partitioning it to two non empty substrings recursively below is one possible representation of s great great gr eat g r e at a t to scramble the string we may choose any non leaf node and swap its two children for example if we choose the node gr and swap its two children it produces a scrambled string rgeat rgeat rg eat r g e at a t we say that rgeat is a scrambled string of great similarly if we continue to swap the children of nodes eat and at it produces a scrambled string rgtae rgtae rg tae r g ta e t a we say that rgtae is a scrambled string of great given two strings s and s of the same length determine if s is a scrambled string of s
given a positive integer n find the least number of perfect square numbers for example which sum to n for example given n return because given n return because credits special thanks to jianchao li fighter for adding this problem and creating all test cases
given a collection of candidate numbers c and a target number t find all unique combinations in c where the candidate numbers sums to t each number in c may only be used once in the combination note all numbers including target will be positive integers the solution set must not contain duplicate combinations for example given candidate set and target a solution set is
in the computer world use restricted resource you have to generate maximum benefit is what we always want to pursue for now suppose you are a dominator of m s and n s respectively on the other hand there is an array with strings consisting of only s and s now your task is to find the maximum number of strings that you can form with given m s and n s each and can be used at most once note the given numbers of s and s will both not exceed the size of given string array won't exceed example input array m n output explanation this are totally strings can be formed by the using of s and s which are “ ” ” ” ” ” ” example input array m n output explanation you could form but then you'd have nothing left better form and
given s s s find whether s is formed by the interleaving of s and s for example given s aabcc s dbbca when s aadbbcbcac return true when s aadbbbaccc return false
given a collection of distinct numbers return all possible permutations for example have the following permutations
write an efficient algorithm that searches for a value in an m x n matrix this matrix has the following properties integers in each row are sorted in ascending from left to right integers in each column are sorted in ascending from top to bottom for example consider the following matrix  given target return true given target return false
given a d board and a list of words from the dictionary find all words in the board each word must be constructed from letters of sequentially adjacent cell where adjacent cells are those horizontally or vertically neighboring the same letter cell may not be used more than once in a word for example given words oath pea eat rain and board 'o' 'a' 'a' 'n' 'e' 't' 'a' 'e' 'i' 'h' 'k' 'r' 'i' 'f' 'l' 'v' return eat oath note you may assume that all inputs are consist of lowercase letters a z click to show hint you would need to optimize your backtracking to pass the larger test could you stop backtracking earlier? if the current candidate does not exist in all words' prefix you could stop backtracking immediately what kind of data structure could answer such query efficiently? does a hash table work? why or why not? how about a trie? if you would like to learn how to implement a basic trie please work on this problem implement trie prefix tree first
given an integer array nums find the sum of the elements between indices i and j i le j inclusive example given nums sumrange sumrange sumrange note you may assume that the array does not change there are many calls to sumrange function
given a string s partition s such that every substring of the partition is a palindrome return all possible palindrome partitioning of s for example given s aab return aa b a a b
given n pairs of parentheses write a function to generate all combinations of well formed parentheses for example given n a solution set is
a sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same for example these are arithmetic sequences the following sequence is not arithmetic a zero indexed array a consisting of n numbers is given a subsequence slice of that array is any sequence of integers p p pk such that le p p pk n a subsequence slice p p pk of array a is called arithmetic if the sequence a p a p a pk a pk is arithmetic in particular this means that k ge the function should return the number of arithmetic subsequence slices in the array a the input contains n integers every integer is in the range of and and le n le the output is guaranteed to be less than example input output explanation all arithmetic subsequence slices are
find the contiguous subarray within an array containing at least one number which has the largest product for example given the array the contiguous subarray has the largest product
write a program to solve a sudoku puzzle by filling the empty cells empty cells are indicated by the character ' ' you may assume that there will be only one unique solution a sudoku puzzle and its solution numbers marked in red
find all possible combinations of k numbers that add up to a number n given that only numbers from to can be used and each combination should be a unique set of numbers example input k n output example input k n output  credits special thanks to mithmatt for adding this problem and creating all test cases
given an integer array with all positive numbers and no duplicates find the number of possible combinations that add up to a positive integer target example nums target the possible combination ways are note that different sequences are counted as different combinations therefore the output is follow up what if negative numbers are allowed in the given array? how does it change the problem? what limitation we need to add to the question to allow negative numbers? credits special thanks to pbrother for adding this problem and creating all test cases
given a non empty string s and a dictionary worddict containing a list of non empty words add spaces in s to construct a sentence where each word is a valid dictionary word you may assume the dictionary does not contain duplicate words return all such possible sentences for example given s catsanddog dict cat cats and sand dog a solution is cats and dog cat sand dog update the worddict parameter had been changed to a list of strings instead of a set of strings please reload the code definition to get the latest changes
a binary watch has leds on the top which represent the hours and the leds on the bottom represent the minutes each led represents a zero or one with the least significant bit on the right for example the above binary watch reads given a non negative integer n which represents the number of leds that are currently on return all possible times the watch could represent example input n return note the order of output does not matter the hour must not contain a leading zero for example is not valid it should be the minute must be consist of two digits and may contain a leading zero for example is not valid it should be
given a d board and a word find if the word exists in the grid the word can be constructed from letters of sequentially adjacent cell where adjacent cells are those horizontally or vertically neighboring the same letter cell may not be used more than once for example given board 'a' 'b' 'c' 'e' 's' 'f' 'c' 's' 'a' 'd' 'e' 'e' word abcced returns true word see returns true word abcb returns false
given a set of distinct positive integers find the largest subset such that every pair si sj of elements in this subset satisfies si sj or sj si if there are multiple solutions return any subset is fine example nums result of course will also be ok example nums result credits special thanks to stomach ache for adding this problem and creating all test cases
given a non empty d matrix matrix and an integer k find the max sum of a rectangle in the matrix such that its sum is no larger than k example given matrix k the answer is because the sum of rectangle is and is the max number no larger than k k note the rectangle inside the matrix must have an area what if the number of rows is much larger than the number of columns? credits special thanks to fujiaozhu for adding this problem and creating all test cases
say you have an array for which the ith element is the price of a given stock on day i if you were only permitted to complete at most one transaction ie buy one and sell one share of the stock design an algorithm to find the maximum profit example input output max difference not as selling price needs to be larger than buying price example input output in this case no transaction is done i e max profit
a message containing letters from a z is being encoded to numbers using the following mapping 'a' 'b' 'z' given an encoded message containing digits determine the total number of ways to decode it for example given encoded message it could be decoded as ab or l the number of ways decoding is
follow up for unique paths now consider if some obstacles are added to the grids how many unique paths would there be? an obstacle and empty space is marked as and respectively in the grid for example there is one obstacle in the middle of a x grid as illustrated below the total number of unique paths is note m and n will be at most
given a string s partition s such that every substring of the partition is a palindrome return the minimum cuts needed for a palindrome partitioning of s for example given s aab return since the palindrome partitioning aa b could be produced using cut
a robot is located at the top left corner of a m x n grid marked 'start' in the diagram below the robot can only move either down or right at any point in time the robot is trying to reach the bottom right corner of the grid marked 'finish' in the diagram below how many possible unique paths are there? above is a x grid how many possible unique paths are there? note m and n will be at most
design a data structure that supports the following two operations void addword word bool search word search word can search a literal word or a regular expression string containing only letters a z or a means it can represent any one letter for example addword bad addword dad addword mad search pad false search bad true search ad true search b true note you may assume that all words are consist of lowercase letters a z click to show hint you should be familiar with how a trie works if not please work on this problem implement trie prefix tree first
given a positive integer n break it into the sum of at least two positive integers and maximize the product of those integers return the maximum product you can get for example given n return given n return note you may assume that n is not less than and not larger than there is a simple o n solution to this problem you may check the breaking results of n ranging from to to discover the regularities credits special thanks to jianchao li fighter for adding this problem and creating all test cases
you are climbing a stair case it takes n steps to reach to the top each time you can either climb or steps in how many distinct ways can you climb to the top? note given n will be a positive integer
given an integer array nums return the number of range sums that lie in lower upper inclusive range sum s i j is defined as the sum of the elements in nums between indices i and j i ≤ j inclusive note a naive algorithm of o n is trivial you must do better than that example given nums lower upper return the three ranges are and their respective sums are credits special thanks to dietpepsi for adding this problem and creating all test cases
table dungeon dungeon th dungeon td border px solid black dungeon th dungeon td text align center height px width px the demons had captured the princess p and imprisoned her in the bottom right corner of a dungeon the dungeon consists of m x n rooms laid out in a d grid our valiant knight k was initially positioned in the top left room and must fight his way through the dungeon to rescue the princess the knight has an initial health point represented by a positive integer if at any point his health point drops to or below he dies immediately some of the rooms are guarded by demons so the knight loses health negative integers upon entering these rooms other rooms are either empty 's or contain magic orbs that increase the knight's health positive integers in order to reach the princess as quickly as possible the knight decides to move only rightward or downward in each step write a function to determine the knight's minimum initial health so that he is able to rescue the princess for example given the dungeon below the initial health of the knight must be at least if he follows the optimal path right right down down k p notes the knight's health has no upper bound any room can contain threats or power ups even the first room the knight enters and the bottom right room where the princess is imprisoned credits special thanks to stellari for adding this problem and creating all test cases
given a d binary matrix filled with 's and 's find the largest square containing only 's and return its area for example given the following matrix  return credits special thanks to freezen for adding this problem and creating all test cases
merge k sorted linked lists and return it as one sorted list analyze and describe its complexity
you have n super washing machines on a line initially each washing machine has some dresses or is empty for each move you could choose any m ≤ m ≤ n washing machines and pass one dress of each washing machine to one of its adjacent washing machines at the same time given an integer array representing the number of dresses in each washing machine from left to right on the line you should find the minimum number of moves to make all the washing machines have the same number of dresses if it is not possible to do it return example input output explanation st move nd move rd move example input output explanation st move nd move example input output explanation it's impossible to make all the three washing machines have the same number of dresses note the range of n is the range of dresses number in a super washing machine is e
in the game two players take turns adding to a running total any integer from the player who first causes the running total to reach or exceed wins what if we change the game so that players cannot re use integers? for example two players might take turns drawing from a common pool of numbers of without replacement until they reach a total given an integer maxchoosableinteger and another integer desiredtotal determine if the first player to move can force a win assuming both players play optimally you can always assume that maxchoosableinteger will not be larger than and desiredtotal will not be larger than example input maxchoosableinteger desiredtotal output false explanation no matter which integer the first player choose the first player will lose the first player can choose an integer from up to if the first player choose the second player can only choose integers from up to the second player will win by choosing and get a total which is desiredtotal same with other integers chosen by the first player the second player will always win
given a string s and a string t check if s is subsequence of t you may assume that there is only lower case english letters in both s and t t is potentially a very long length string and s is a short string a subsequence of a string is a new string which is formed from the original string by deleting some can be none of the characters without disturbing the relative positions of the remaining characters ie ace is a subsequence of abcde while aec is not example s abc t ahbgdc return true example s axc t ahbgdc return false follow up if there are lots of incoming s say s s sk where k b and you want to check one by one to see if t has its subsequence in this scenario how would you change your code? credits special thanks to pbrother for adding this problem and creating all test cases
the set n contains a total of n unique permutations by listing and labeling all of the permutations in order we get the following sequence ie for n given n and k return the kth permutation sequence note given n will be between and inclusive
say you have an array for which the ith element is the price of a given stock on day i design an algorithm to find the maximum profit you may complete at most k transactions note you may not engage in multiple transactions at the same time ie you must sell the stock before you buy again credits special thanks to freezen for adding this problem and creating all test cases
given a list of words without duplicates please write a program that returns all concatenated words in the given list of words a concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array example input cat cats catsdogcats dog dogcatsdog hippopotamuses rat ratcatdogcat output catsdogcats dogcatsdog ratcatdogcat explanation catsdogcats can be concatenated by cats dog and cats dogcatsdog can be concatenated by dog cats and dog ratcatdogcat can be concatenated by rat cat dog and cat note the number of elements of the given array will not exceed the length sum of elements in the given array will not exceed all the input string will only include lower case letters the returned elements order does not matter
in the video game fallout the quest road to freedom requires players to reach a metal dial called the freedom trail ring and use the dial to spell a specific keyword in order to open the door given a string ring which represents the code engraved on the outer ring and another string key which represents the keyword needs to be spelled you need to find the minimum number of steps in order to spell all the characters in the keyword initially the first character of the ring is aligned at direction you need to spell all the characters in the string key one by one by rotating the ring clockwise or anticlockwise to make each character of the string key aligned at direction and then by pressing the center button at the stage of rotating the ring to spell the key character key i you can rotate the ring clockwise or anticlockwise one place which counts as step the final purpose of the rotation is to align one of the string ring's characters at the direction where this character must equal to the character key i if the character key i has been aligned at the direction you need to press the center button to spell which also counts as step after the pressing you could begin to spell the next character in the key next stage otherwise you've finished all the spelling example input ring godding key gd output explanation for the first key character 'g' since it is already in place we just need step to spell this character for the second key character 'd' we need to rotate the ring godding anticlockwise by two steps to make it become ddinggo also we need more step for spelling so the final output is note length of both ring and key will be in range to there are only lowercase letters in both strings and might be some duplcate characters in both strings it's guaranteed that string key could always be spelled by rotating the string ring
define s s n as the string s which consists of n connected strings s for example abc abcabcabc on the other hand we define that string s can be obtained from string s if we can remove some characters from s such that it becomes s for example “abc” can be obtained from “abdbec” based on our definition but it can not be obtained from “acbbe” you are given two non empty strings s and s each at most characters long and two integers le n le and le n le now consider the strings s and s where s s n and s s n find the maximum integer m such that s m can be obtained from s example input s acb n s ab n return
given a m x n grid filled with non negative numbers find a path from top left to bottom right which minimizes the sum of all numbers along its path note you can only move either down or right at any point in time
given a non empty array containing only positive integers find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal note each of the array element will not exceed the array size will not exceed example input output true explanation the array can be partitioned as and example input output false explanation the array cannot be partitioned into equal sum subsets
given an array of scores that are non negative integers player picks one of the numbers from either end of the array followed by the player and then player and so on each time a player picks a number that number will not be available for the next player this continues until all the scores have been chosen the player with the maximum score wins given an array of scores predict whether player is the winner you can assume each player plays to maximize his score example input output false explanation initially player can choose between and if he chooses or then player can choose from or and if player chooses then player will be left with or so final score of player is and player is hence player will never be the winner and you need to return false example input output true explanation player first chooses then player have to choose between and no matter which number player choose player can choose finally player has more score than player so you need to return true representing player can win note length of the array any scores in the given array are non negative integers and will not exceed if the scores of both players are equal then player is still the winner
given an integer matrix find the length of the longest increasing path from each cell you can either move to four directions left right up or down you may not move diagonally or move outside of the boundary i e wrap around is not allowed example nums return the longest increasing path is example nums return the longest increasing path is moving diagonally is not allowed credits special thanks to dietpepsi for adding this problem and creating all test cases
a frog is crossing a river the river is divided into x units and at each unit there may or may not exist a stone the frog can jump on a stone but it must not jump into the water given a list of stones' positions in units in sorted ascending order determine if the frog is able to cross the river by landing on the last stone initially the frog is on the first stone and assume the first jump must be unit if the frog's last jump was k units then its next jump must be either k k or k units note that the frog can only jump in the forward direction note the number of stones is ge and is each stone's position will be a non negative integer the first stone's position is always example there are a total of stones the first stone at the th unit second stone at the st unit third stone at the rd unit and so on the last stone at the th unit return true the frog can jump to the last stone by jumping unit to the nd stone then units to the rd stone then units to the th stone then units to the th stone units to the th stone and units to the th stone example return false there is no way to jump to the last stone as the gap between the th and th stone is too large
given a string containing just the characters ' ' and ' ' find the length of the longest valid well formed parentheses substring for the longest valid parentheses substring is which has length another example is where the longest valid parentheses substring is which has length
given a d matrix matrix find the sum of the elements inside the rectangle defined by its upper left corner row col and lower right corner row col the above rectangle with the red border is defined by row col and row col which contains sum example given matrix  sumregion sumregion sumregion note you may assume that the matrix does not change there are many calls to sumregion function you may assume that row le row and col le col
given an unsorted array of integers find the length of longest increasing subsequence for example given the longest increasing subsequence is therefore the length is note that there may be more than one lis combination it is only necessary for you to return the length your algorithm should run in o n complexity follow up could you improve it to o n log n time complexity? credits special thanks to pbrother for adding this problem and creating all test cases
given n balloons indexed from to n each balloon is painted with a number on it represented by array nums you are asked to burst all the balloons if the you burst balloon i you will get nums left nums i nums right coins here left and right are adjacent indices of i after the burst the left and right then becomes adjacent find the maximum coins you can collect by bursting the balloons wisely note you may imagine nums nums n they are not real therefore you can not burst them le n le le nums i le example given return nums coins credits special thanks to dietpepsi for adding this problem and creating all test cases
given two words word and word find the minimum number of steps required to convert word to word each operation is counted as step you have the following operations permitted on a word a insert a character b delete a character c replace a character
a city's skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance now suppose you are given the locations and height of all the buildings as shown on a cityscape photo figure a write a program to output the skyline formed by these buildings collectively figure b the geometric information of each building is represented by a triplet of integers li ri hi where li and ri are the x coordinates of the left and right edge of the ith building respectively and hi is its height it is guaranteed that ≤ li ri ≤ int max hi ≤ int max and ri li you may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height for instance the dimensions of all buildings in figure a are recorded as  the output is a list of key points red dots in figure b in the format of x y x y x y that uniquely defines a skyline a key point is the left endpoint of a horizontal line segment note that the last key point where the rightmost building ends is merely used to mark the termination of the skyline and always has zero height also the ground in between any two adjacent buildings should be considered part of the skyline contour for instance the skyline in figure b should be represented as  notes the number of buildings in any input list is guaranteed to be in the range the input list is already sorted in ascending order by the left x position li the output list must be sorted by the x position there must be no consecutive horizontal lines of equal height in the output skyline for instance  is not acceptable the three lines of height should be merged into one in the final output as such credits special thanks to stellari for adding this problem creating these two awesome images and all test cases
given a non negative integer n count all numbers with unique digits x where le x lt n example given n return the answer should be the total numbers in the range of le x lt excluding a direct way is to use the backtracking approach backtracking should contains three states which are the current number number of steps to get that number and a bitmask which represent which number is marked as visited so far in the current number start with state and count all valid number till we reach number of steps equals to n this problem can also be solved using a dynamic programming approach and some knowledge of combinatorics let f k count of numbers with unique digits with length equals k f f k k the first factor is because a number cannot start with credits special thanks to memoryless for adding this problem and creating all test cases
you are given a list of non negative integers a a an and a target s now you have symbols and for each integer you should choose one from and as its new symbol find out how many ways to assign symbols to make sum of integers equal to target s example input nums is s is output explanation there are ways to assign symbols to make the sum of nums be target note the length of the given array is positive and will not exceed the sum of elements in the given array will not exceed your output answer is guaranteed to be fitted in a bit integer
you are given coins of different denominations and a total amount of money amount write a function to compute the fewest number of coins that you need to make up that amount if that amount of money cannot be made up by any combination of the coins return example coins amount return example coins amount return note you may assume that you have an infinite number of each kind of coin credits special thanks to jianchao li fighter for adding this problem and creating all test cases
there are two sorted arrays nums and nums of size m and n respectively find the median of the two sorted arrays the overall run time complexity should be o log m n example nums nums the median is example nums nums the median is
given a set of distinct integers nums return all possible subsets note the solution set must not contain duplicate subsets for example if nums a solution is
given a digit string return all possible letter combinations that the number could represent a mapping of digit to letters just like on the telephone buttons is given below input digit string output ad ae af bd be bf cd ce cf note although the above answer is in lexicographical order your answer could be in any order you want
given an array which consists of non negative integers and an integer m you can split the array into m non empty continuous subarrays write an algorithm to minimize the largest sum among these m subarrays note if n is the length of array assume the following constraints are satisfied le n le le m le min n examples input nums m output explanation there are four ways to split nums into two subarrays the best way is to split it into and where the largest sum among the two subarrays is only
write a program to find the n th ugly number ugly numbers are positive numbers whose prime factors only include for example is the sequence of the first ugly numbers note that is typically treated as an ugly number and n does not exceed the naive approach is to call isugly for every number until you reach the nth one most numbers are not ugly try to focus your effort on generating only the ugly ones an ugly number must be multiplied by either or from a smaller ugly number the key is how to maintain the order of the ugly numbers try a similar approach of merging from three sorted lists l l and l assume you have uk the kth ugly number then uk must be min l l l credits special thanks to jianchao li fighter for adding this problem and creating all test cases
given a non negative integer number num for every numbers i in the range le i le num calculate the number of 's in their binary representation and return them as an array example for num you should return follow up it is very easy to come up with a solution with run time o n sizeof integer but can you do it in linear time o n possibly in a single pass? space complexity should be o n can you do it like a boss? do it without using any builtin function like builtin popcount in c or in any other language you should make use of what you have produced already divide the numbers in ranges like and so on and try to generate new range from previous or does the odd even status of the number help you in calculating the number of s? credits special thanks to syedee for adding this problem and creating all test cases
given a non empty string s and a dictionary worddict containing a list of non empty words determine if s can be segmented into a space separated sequence of one or more dictionary words you may assume the dictionary does not contain duplicate words for example given s leetcode dict leet code return true because leetcode can be segmented as leet code update the worddict parameter had been changed to a list of strings instead of a set of strings please reload the code definition to get the latest changes
the n queens puzzle is the problem of placing n queens on an n×n chessboard such that no two queens attack each other given an integer n return all distinct solutions to the n queens puzzle each solution contains a distinct board configuration of the n queens' placement where 'q' and ' ' both indicate a queen and an empty space respectively for example there exist two distinct solutions to the queens puzzle q solution q q q q solution q q q
follow up for n queens problem now instead outputting board configurations return the total number of distinct solutions
consider the string s to be the infinite wraparound string of abcdefghijklmnopqrstuvwxyz so s will look like this zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd now we have another string p your job is to find out how many unique non empty substrings of p are present in s in particular your input is the string p and you need to output the number of different non empty substrings of p in the string s note p consists of only lowercase english letters and the size of p might be over example input a output explanation only the substring a of string a is in the string s example input cac output explanation there are two substrings a c of string cac in the string s example input zab output explanation there are six substrings z a b za ab zab of string zab in the string s
given a string of numbers and operators return all possible results from computing all the different possible ways to group numbers and operators the valid operators are and example input output example input  output credits special thanks to mithmatt for adding this problem and creating all test cases
find the contiguous subarray within an array containing at least one number which has the largest sum for example given the array the contiguous subarray has the largest sum click to show more practice more practice if you have figured out the o n solution try coding another solution using the divide and conquer approach which is more subtle
given two arrays of length m and n with digits representing two numbers create the maximum number of length k m n from digits of the two the relative order of the digits from the same array must be preserved return an array of the k digits you should try to optimize your time and space complexity example nums nums k return example nums nums k return example nums nums k return credits special thanks to dietpepsi for adding this problem and creating all test cases
given two words beginword and endword and a dictionary's word list find all shortest transformation sequence s from beginword to endword such that only one letter can be changed at a time each transformed word must exist in the word list note that beginword is not a transformed word for example given beginword hit endword cog wordlist hot dot dog lot log cog return hit hot dot dog cog hit hot lot log cog note return an empty list if there is no such transformation sequence all words have the same length all words contain only lowercase alphabetic characters you may assume no duplicates in the word list you may assume beginword and endword are non empty and are not the same update the wordlist parameter had been changed to a list of strings instead of a set of strings please reload the code definition to get the latest changes
say you have an array for which the ith element is the price of a given stock on day i design an algorithm to find the maximum profit you may complete as many transactions as you like ie buy one and sell one share of the stock multiple times with the following restrictions you may not engage in multiple transactions at the same time ie you must sell the stock before you buy again after you sell your stock you cannot buy stock on next day ie cooldown day example prices maxprofit transactions buy sell cooldown buy sell credits special thanks to dietpepsi for adding this problem and creating all test cases
given an array of size n find the majority element the majority element is the element that appears more than lfloor n rfloor times you may assume that the array is non empty and the majority element always exist in the array credits special thanks to ts for adding this problem and creating all test cases
given a string s and a string t count the number of distinct subsequences of t in s a subsequence of a string is a new string which is formed from the original string by deleting some can be none of the characters without disturbing the relative positions of the remaining characters ie ace is a subsequence of abcde while aec is not here is an example s rabbbit t rabbit return
we are playing the guess game the game is as follows i pick a number from to n you have to guess which number i picked every time you guess wrong i'll tell you whether the number i picked is higher or lower however when you guess a particular number x and you guess wrong you pay x you win the game when you guess the number i picked example n i pick first round you guess i tell you that it's higher you pay second round you guess i tell you that it's higher you pay third round you guess i tell you that it's lower you pay game over is the number i picked you end up paying given a particular n ge find out how much money you need to have to guarantee a win the best strategy to play the game is to minimize the maximum loss you could possibly face another strategy is to minimize the expected loss here we are interested in the first scenario take a small example n what do you end up paying in the worst case? check out this article if you're still stuck the purely recursive implementation of minimax would be worthless for even a small n you must use dynamic programming as a follow up how would you modify your code to solve the problem of minimizing the expected loss instead of the worst case loss? credits special thanks to agave and stefanpochmann for adding this problem and creating all test cases
given an array nums we call i j an important reverse pair if i lt j and nums i gt nums j you need to return the number of important reverse pairs in the given array example input output example input output note the length of the given array will not exceed all the numbers in the input array are in the range of bit integer
given a string containing only digits restore it by returning all possible valid ip address combinations for example given return order does not matter
given two integers n and k return all possible combinations of k numbers out of n for example if n and k a solution is
given an integer n generate all structurally unique bst's binary search trees that store values n for example given n your program should return all unique bst's shown below
given a string that contains only digits and a target value return all possibilities to add binary operators not unary or between the digits so they evaluate to the target value examples  credits special thanks to davidtan for adding this problem and creating all test cases
the gray code is a binary numeral system where two successive values differ in only one bit given a non negative integer n representing the total number of bits in the code print the sequence of gray code a gray code sequence must begin with for example given n return its gray code sequence is  note for a given n a gray code sequence is not uniquely defined for example is also a valid gray code sequence according to the above definition for now the judge is able to judge based on one instance of gray code sequence sorry about that
you are given an integer array nums and you have to return a new counts array the counts array has the property where counts i is the number of smaller elements to the right of nums i example given nums to the right of there are smaller elements and to the right of there is only smaller element to the right of there is smaller element to the right of there is smaller element return the array
a sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same for example these are arithmetic sequence the following sequence is not arithmetic a zero indexed array a consisting of n numbers is given a slice of that array is any pair of integers p q such that p q n a slice p q of array a is called arithmetic if the sequence a p a p a q a q is arithmetic in particular this means that p q the function should return the number of arithmetic slices in the array a example a return for arithmetic slices in a and itself
a sequence of numbers is called a wiggle sequence if the differences between successive numbers strictly alternate between positive and negative the first difference if one exists may be either positive or negative a sequence with fewer than two elements is trivially a wiggle sequence for example is a wiggle sequence because the differences are alternately positive and negative in contrast and are not wiggle sequences the first because its first two differences are positive and the second because its last difference is zero given a sequence of integers return the length of the longest subsequence that is a wiggle sequence a subsequence is obtained by deleting some number of elements eventually also zero from the original sequence leaving the remaining elements in their original order examples input output the entire sequence is a wiggle sequence input output there are several subsequences that achieve this length one is input output follow up can you do it in o n time? credits special thanks to agave and stefanpochmann for adding this problem and creating all test cases
