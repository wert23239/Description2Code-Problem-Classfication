write a program to find the node at which the intersection of two singly linked lists begins for example the following two linked lists a a → a ↘ c → c → c ↗ b b → b → b begin to intersect at node c notes if the two linked lists have no intersection at all return null the linked lists must retain their original structure after the function returns you may assume there are no cycles anywhere in the entire linked structure your code should preferably run in o n time and use only o memory credits special thanks to stellari for adding this problem and creating all test cases
given a complete binary tree count the number of nodes definition of a complete binary tree from wikipedia in a complete binary tree every level except possibly the last is completely filled and all nodes in the last level are as far left as possible it can have between and h nodes inclusive at the last level h
clone an undirected graph each node in the graph contains a label and a list of its neighbors oj's undirected graph serialization nodes are labeled uniquely we use as a separator for each node and as a separator for node label and each neighbor of the node as an example consider the serialized graph the graph has a total of three nodes and therefore contains three parts as separated by first node is labeled as connect node to both nodes and second node is labeled as connect node to node third node is labeled as connect node to node itself thus forming a self cycle visually the graph looks like the following
given a linked list return the node where the cycle begins if there is no cycle return null note do not modify the linked list follow up can you solve it without using extra space?
given a string and a string dictionary find the longest string in the dictionary that can be formed by deleting some characters of the given string if there are more than one possible results return the longest word with the smallest lexicographical order if there is no possible result return the empty string example input s abpcplea d ale apple monkey plea output apple example input s abpcplea d a b c output a note all the strings in the input will only contain lower case letters the size of the dictionary won't exceed the length of all the strings in the input won't exceed
given a string and an integer k you need to reverse the first k characters for every k characters counting from the start of the string if there are less than k characters left reverse all of them if there are less than k but greater than or equal to k characters then reverse the first k characters and left the other as original example input s abcdefg k output bacdfeg restrictions the string consists of lower english letters only length of the given string and k will in the range
remove all elements from a linked list of integers that have value val example given val return credits special thanks to mithmatt for adding this problem and creating all test cases
given an array of integers find out whether there are two distinct indices i and j in the array such that the absolute difference between nums i and nums j is at most t and the absolute difference between i and j is at most k
the thief has found himself a new place for his thievery again there is only one entrance to this area called the root besides the root each house has one and only one parent house after a tour the smart thief realized that all houses in this place forms a binary tree it will automatically contact the police if two directly linked houses were broken into on the same night determine the maximum amount of money the thief can rob tonight without alerting the police example maximum amount of money the thief can rob example maximum amount of money the thief can rob credits special thanks to dietpepsi for adding this problem and creating all test cases
given a binary tree return the zigzag level order traversal of its nodes' values ie from left to right then right to left for the next level and alternate between for example given binary tree null null return its zigzag level order traversal as
given an m x n matrix of positive integers representing the height of each unit cell in a d elevation map compute the volume of water it is able to trap after raining note both m and n are less than the height of each unit cell is greater than and is less than example given the following x height map  return the above image represents the elevation map before the rain after the rain water are trapped between the blocks the total volume of water trapped is
follow up for find minimum in rotated sorted array what if duplicates are allowed? would this affect the run time complexity? how and why? suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand i e might become find the minimum element the array may contain duplicates
given a string containing just the characters ' ' ' ' ' ' ' ' ' ' and ' ' determine if the input string is valid the brackets must close in the correct order and are all valid but and are not
convert a non negative integer to its english words representation given input is guaranteed to be less than for example one hundred twenty three twelve thousand three hundred forty five one million two hundred thirty four thousand five hundred sixty seven did you see a pattern in dividing the number into chunk of words? for example and group the number by thousands digits you can write a helper function that takes a number less than and convert just that chunk to words there are many edge cases what are some good test cases? does your code work with input such as ? or ? middle chunk is zero and should not be printed out
given four lists a b c d of integer values compute how many tuples i j k l there are such that a i b j c k d l is zero to make problem a bit easier all a b c d have same length of n where le n le all integers are in the range of to and the result is guaranteed to be at most example input a b c d output explanation the two tuples are a b c d a b c d
given a binary tree imagine yourself standing on the right side of it return the values of the nodes you can see ordered from top to bottom for example given the following binary tree  you should return credits special thanks to amrsaqr for adding this problem and creating all test cases
given a binary tree return the inorder traversal of its nodes' values for example given binary tree null return note recursive solution is trivial could you do it iteratively?
given a string s find the longest palindromic substring in s you may assume that the maximum length of s is example input babad output bab note aba is also a valid answer example input cbbd output bb
given a string which consists of lowercase or uppercase letters find the length of the longest palindromes that can be built with those letters this is case sensitive for example aa is not considered a palindrome here note assume the length of given string will not exceed example input abccccdd output explanation one longest palindrome that can be built is dccaccd whose length is
given a binary tree return the level order traversal of its nodes' values ie from left to right level by level for example given binary tree null null return its level order traversal as
compare two version numbers version and version if version gt version return if version lt version return otherwise return you may assume that the version strings are non empty and contain only digits and the character the character does not represent a decimal point and is used to separate number sequences for instance is not two and a half or half way to version three it is the fifth second level revision of the second first level revision here is an example of version numbers ordering lt lt lt credits special thanks to ts for adding this problem and creating all test cases
write an efficient algorithm that searches for a value in an m x n matrix this matrix has the following properties integers in each row are sorted from left to right the first integer of each row is greater than the last integer of the previous row for example consider the following matrix  given target return true
a robot is located at the top left corner of a m x n grid marked 'start' in the diagram below the robot can only move either down or right at any point in time the robot is trying to reach the bottom right corner of the grid marked 'finish' in the diagram below how many possible unique paths are there? above is a x grid how many possible unique paths are there? note m and n will be at most
write a function to delete a node except the tail in a singly linked list given only access to that node supposed the linked list is and you are given the third node with value the linked list should become after calling your function
given a binary tree check whether it is a mirror of itself ie symmetric around its center for example this binary tree is symmetric  but the following null null is not note bonus points if you could solve it both recursively and iteratively
given a singly linked list determine if it is a palindrome follow up could you do it in o n time and o space?
given a binary search tree bst with duplicates find all the mode s the most frequently occurred element in the given bst assume a bst is defined as follows the left subtree of a node contains only nodes with keys less than or equal to the node's key the right subtree of a node contains only nodes with keys greater than or equal to the node's key both the left and right subtrees must also be binary search trees for example given bst null return note if a tree has more than one mode you can return them in any order follow up could you do that without using any extra space? assume that the implicit stack space incurred due to recursion does not count
given a string s you are allowed to convert it to a palindrome by adding characters in front of it find and return the shortest palindrome you can find by performing this transformation for example given aacecaaa return aaacecaaa given abcd return dcbabcd credits special thanks to ifanchu for adding this problem and creating all test cases thanks to freezen for additional test cases
given an array of n positive integers and a positive integer s find the minimal length of a contiguous subarray of which the sum ≥ s if there isn't one return instead for example given the array and s the subarray has the minimal length under the problem constraint click to show more practice more practice if you have figured out the o n solution try coding another solution of which the time complexity is o n log n credits special thanks to freezen for adding this problem and creating all test cases
given an array and a value remove all instances of that value in place and return the new length do not allocate extra space for another array you must do this in place with constant memory the order of elements can be changed it doesn't matter what you leave beyond the new length example given input array nums val your function should return length with the first two elements of nums being try two pointers did you use the property of the order of elements can be changed ? what happens when the elements to remove are rare?
given n points in the plane that are all pairwise distinct a boomerang is a tuple of points i j k such that the distance between i and j equals the distance between i and k the order of the tuple matters find the number of boomerangs you may assume that n will be at most and coordinates of points are all in the range inclusive example input output explanation the two boomerangs are and
suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand i e might become find the minimum element you may assume no duplicate exists in the array
given an array of integers find if the array contains any duplicates your function should return true if any value appears at least twice in the array and it should return false if every element is distinct
for a undirected graph with tree characteristics we can choose any node as the root the result graph is then a rooted tree among all possible rooted trees those with minimum height are called minimum height trees mhts given such a graph write a function to find all the mhts and return a list of their root labels format the graph contains n nodes which are labeled from to n you will be given the number n and a list of undirected edges each edge is a pair of labels you can assume that no duplicate edges will appear in edges since all edges are undirected is the same as and thus will not appear together in edges example given n edges return example given n edges return how many mhts can a graph have at most? note according to the definition of tree on wikipedia “a tree is an undirected graph in which any two vertices are connected by exactly one path in other words any connected graph without simple cycles is a tree ” the height of a rooted tree is the number of edges on the longest downward path between the root and a leaf credits special thanks to dietpepsi for adding this problem and creating all test cases
given numrows generate the first numrows of pascal's triangle for example given numrows return
given n pairs of parentheses write a function to generate all combinations of well formed parentheses for example given n a solution set is
given a linked list swap every two adjacent nodes and return its head for example given you should return the list as your algorithm should use only constant space you may not modify the values in the list only nodes itself can be changed
given a non empty array of integers return the k most frequent elements for example given and k return note you may assume k is always valid ≤ k ≤ number of unique elements your algorithm's time complexity must be better than o n log n where n is the array's size
given a binary tree and a sum determine if the tree has a root to leaf path such that adding up all the values along the path equals the given sum for example given the below binary tree and sum  return true as there exist a root to leaf path which sum is
count the number of segments in a string where a segment is defined to be a contiguous sequence of non space characters please note that the string does not contain any non printable characters example input hello my name is john output
given an array s of n integers are there elements a b c and d in s such that a b c d target? find all unique quadruplets in the array which gives the sum of target note the solution set must not contain duplicate quadruplets for example given array s and target a solution set is
you are given an n x n d matrix representing an image rotate the image by degrees clockwise follow up could you do this in place?
given a binary tree find the maximum path sum for this problem a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent child connections the path must contain at least one node and does not need to go through the root for example given the below binary tree return
given a linked list determine if it has a cycle in it follow up can you solve it without using extra space?
given a non negative integer represented as a non empty array of digits plus one to the integer you may assume the integer do not contain any leading zero except the number itself the digits are stored such that the most significant digit is at the head of the list
given an array of words and a length l format the text such that each line has exactly l characters and is fully left and right justified you should pack your words in a greedy approach that is pack as many words as you can in each line pad extra spaces ' ' when necessary so that each line has exactly l characters extra spaces between words should be distributed as evenly as possible if the number of spaces on a line do not divide evenly between words the empty slots on the left will be assigned more spaces than the slots on the right for the last line of text it should be left justified and no extra space is inserted between words for example words this is an example of text justification l return the formatted lines as this is an example of text justification note each word is guaranteed not to exceed l in length click to show corner cases corner cases a line other than the last line might contain only one word what should you do in this case? in this case that line should be left justified
merge k sorted linked lists and return it as one sorted list analyze and describe its complexity
given a d board and a list of words from the dictionary find all words in the board each word must be constructed from letters of sequentially adjacent cell where adjacent cells are those horizontally or vertically neighboring the same letter cell may not be used more than once in a word for example given words oath pea eat rain and board 'o' 'a' 'a' 'n' 'e' 't' 'a' 'e' 'i' 'h' 'k' 'r' 'i' 'f' 'l' 'v' return eat oath note you may assume that all inputs are consist of lowercase letters a z click to show hint you would need to optimize your backtracking to pass the larger test could you stop backtracking earlier? if the current candidate does not exist in all words' prefix you could stop backtracking immediately what kind of data structure could answer such query efficiently? does a hash table work? why or why not? how about a trie? if you would like to learn how to implement a basic trie please work on this problem implement trie prefix tree first
given a binary array find the maximum number of consecutive s in this array example input output explanation the first two digits or the last three digits are consecutive s the maximum number of consecutive s is note the input array will only contain and the length of input array is a positive integer and will not exceed
given a binary tree and a sum find all root to leaf paths where each path's sum equals the given sum for example given the below binary tree and sum  return
design a data structure that supports all following operations in average o time insert val inserts an item val to the set if not already present remove val removes an item val from the set if present getrandom returns a random element from current set of elements each element must have the same probability of being returned example init an empty set randomizedset randomset new randomizedset inserts to the set returns true as was inserted successfully randomset insert returns false as does not exist in the set randomset remove inserts to the set returns true set now contains randomset insert getrandom should return either or randomly randomset getrandom removes from the set returns true set now contains randomset remove was already in the set so return false randomset insert since is the only number in the set getrandom always return randomset getrandom
given an absolute path for a file unix style simplify it for example path home home path a b c c click to show corner cases corner cases did you consider the case where path ? in this case you should return another corner case is the path might contain multiple slashes ' ' together such as home foo in this case you should ignore redundant slashes and return home foo
