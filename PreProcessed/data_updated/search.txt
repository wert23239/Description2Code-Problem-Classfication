given a n x n matrix where each of the rows and columns are sorted in ascending order find the kth smallest element in the matrix note that it is the kth smallest element in the sorted order not the kth distinct element example matrix k return note you may assume k is always valid ≤ k ≤ n
implement wildcard pattern matching with support for '?' and ' ' '?' matches any single character ' ' matches any sequence of characters including the empty sequence the matching should cover the entire input string not partial the function prototype should be bool ismatch const char s const char p some examples ismatch aa a → false ismatch aa aa → true ismatch aaa aa → false ismatch aa → true ismatch aa a → true ismatch ab ? → true ismatch aab c a b → false
given a collection of intervals find the minimum number of intervals you need to remove to make the rest of the intervals non overlapping note you may assume the interval's end point is always bigger than its start point intervals like and have borders touching but they don't overlap each other example input output explanation can be removed and the rest of intervals are non overlapping example input output explanation you need to remove two to make the rest of intervals non overlapping example input output explanation you don't need to remove any of the intervals since they're already non overlapping
there are n children standing in a line each child is assigned a rating value you are giving candies to these children subjected to the following requirements each child must have at least one candy children with a higher rating get more candies than their neighbors what is the minimum candies you must give?
given inorder and postorder traversal of a tree construct the binary tree note you may assume that duplicates do not exist in the tree
suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand i e might become you are given a target value to search if found in the array return its index otherwise return you may assume no duplicate exists in the array
you have a number of envelopes with widths and heights given as a pair of integers w h one envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope what is the maximum number of envelopes can you russian doll? put one inside other example given envelopes the maximum number of envelopes you can russian doll is
clone an undirected graph each node in the graph contains a label and a list of its neighbors oj's undirected graph serialization nodes are labeled uniquely we use as a separator for each node and as a separator for node label and each neighbor of the node as an example consider the serialized graph the graph has a total of three nodes and therefore contains three parts as separated by first node is labeled as connect node to both nodes and second node is labeled as connect node to node third node is labeled as connect node to node itself thus forming a self cycle visually the graph looks like the following
given a binary tree return all root to leaf paths for example given the following binary tree all root to leaf paths are credits special thanks to jianchao li fighter for adding this problem and creating all test cases
two elements of a binary search tree bst are swapped by mistake recover the tree without changing its structure note a solution using o n space is pretty straight forward could you devise a constant space solution?
given a binary tree determine if it is a valid binary search tree bst assume a bst is defined as follows the left subtree of a node contains only nodes with keys less than the node's key the right subtree of a node contains only nodes with keys greater than the node's key both the left and right subtrees must also be binary search trees example binary tree return true example binary tree return false
given a set of non overlapping intervals insert a new interval into the intervals merge if necessary you may assume that the intervals were initially sorted according to their start times example given intervals insert and merge in as example given insert and merge in as this is because the new interval overlaps with
given preorder and inorder traversal of a tree construct the binary tree note you may assume that duplicates do not exist in the tree
given an array nums containing n integers where each integer is between and n inclusive prove that at least one duplicate number must exist assume that there is only one duplicate number find the duplicate one note you must not modify the array assume the array is read only you must use only constant o extra space your runtime complexity should be less than o n there is only one duplicate number in the array but it could be repeated more than once credits special thanks to jianchao li fighter for adding this problem and creating all test cases
suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand i e might become find the minimum element you may assume no duplicate exists in the array
let's play the minesweeper game wikipedia online game you are given a d char matrix representing the game board 'm' represents an unrevealed mine 'e' represents an unrevealed empty square 'b' represents a revealed blank square that has no adjacent above below left right and all diagonals mines digit ' ' to ' ' represents how many mines are adjacent to this revealed square and finally 'x' represents a revealed mine now given the next click position row and column indices among all the unrevealed squares 'm' or 'e' return the board after revealing this position according to the following rules if a mine 'm' is revealed then the game is over change it to 'x' if an empty square 'e' with no adjacent mines is revealed then change it to revealed blank 'b' and all of its adjacent unrevealed squares should be revealed recursively if an empty square 'e' with at least one adjacent mine is revealed then change it to a digit ' ' to ' ' representing the number of adjacent mines return the board when no more squares will be revealed example input 'e' 'e' 'e' 'e' 'e' 'e' 'e' 'm' 'e' 'e' 'e' 'e' 'e' 'e' 'e' 'e' 'e' 'e' 'e' 'e' click output 'b' ' ' 'e' ' ' 'b' 'b' ' ' 'm' ' ' 'b' 'b' ' ' ' ' ' ' 'b' 'b' 'b' 'b' 'b' 'b' explanation example input 'b' ' ' 'e' ' ' 'b' 'b' ' ' 'm' ' ' 'b' 'b' ' ' ' ' ' ' 'b' 'b' 'b' 'b' 'b' 'b' click output 'b' ' ' 'e' ' ' 'b' 'b' ' ' 'x' ' ' 'b' 'b' ' ' ' ' ' ' 'b' 'b' 'b' 'b' 'b' 'b' explanation note the range of the input matrix's height and width is the click position will only be an unrevealed square 'm' or 'e' which also means the input board contains at least one clickable square the input board won't be a stage when game is over some mines have been revealed for simplicity not mentioned rules should be ignored in this problem for example you don't need to reveal all the unrevealed mines when the game is over consider any cases that you will win the game or flag any squares
given a binary tree return the level order traversal of its nodes' values ie from left to right level by level for example given binary tree null null return its level order traversal as
remove the minimum number of invalid parentheses in order to make the input string valid return all possible results note the input string may contain letters other than the parentheses and examples a a a credits special thanks to hpplayer for adding this problem and creating all test cases
given a positive integer n find the least number of perfect square numbers for example which sum to n for example given n return because given n return because credits special thanks to jianchao li fighter for adding this problem and creating all test cases
given an array of integers that is already sorted in ascending order find two numbers such that they add up to a specific target number the function twosum should return indices of the two numbers such that they add up to the target where index must be less than index please note that your returned answers both index and index are not zero based you may assume that each input would have exactly one solution and you may not use the same element twice input numbers target output index index
given a non negative integer num represented as a string remove k digits from the number so that the new number is the smallest possible note the length of num is less than and will be ge k the given num does not contain any leading zero example input num k output explanation remove the three digits and to form the new number which is the smallest example input num k output explanation remove the leading and the number is note that the output must not contain leading zeroes example input num k output explanation remove all the digits from the number and it is left with nothing which is
given a d board containing 'x' and 'o' the letter o capture all regions surrounded by 'x' a region is captured by flipping all 'o's into 'x's in that surrounded region for example x x x x x o o x x x o x x o x x after running your function the board should be x x x x x x x x x x x x x o x x
given an array of non negative integers you are initially positioned at the first index of the array each element in the array represents your maximum jump length at that position your goal is to reach the last index in the minimum number of jumps for example given array a the minimum number of jumps to reach the last index is jump step from index to then steps to the last index note you can assume that you can always reach the last index
given a positive integer num write a function which returns true if num is a perfect square else false note do not use any built in library function such as sqrt example input returns true example input returns false credits special thanks to elmirap for adding this problem and creating all test cases
given a list of airline tickets represented by pairs of departure and arrival airports from to reconstruct the itinerary in order all of the tickets belong to a man who departs from jfk thus the itinerary must begin with jfk note if there are multiple valid itineraries you should return the itinerary that has the smallest lexical order when read as a single string for example the itinerary jfk lga has a smaller lexical order than jfk lgb all airports are represented by three capital letters iata code you may assume all tickets form at least one valid itinerary example tickets muc lhr jfk muc sfo sjc lhr sfo return jfk muc lhr sfo sjc example tickets jfk sfo jfk atl sfo atl atl jfk atl sfo return jfk atl jfk sfo atl sfo another possible reconstruction is jfk sfo atl jfk atl sfo but it is larger in lexical order credits special thanks to dietpepsi for adding this problem and creating all test cases
given an encoded string return it's decoded string the encoding rule is k encoded string where the encoded string inside the square brackets is being repeated exactly k times note that k is guaranteed to be a positive integer you may assume that the input string is always valid no extra white spaces square brackets are well formed etc furthermore you may assume that the original data does not contain any digits and that digits are only for those repeat numbers k for example there won't be input like a or examples s a bc return aaabcbc s a c return accaccacc s abc cd ef return abcabccdcdcdef
given two arrays write a function to compute their intersection example given nums nums return note each element in the result should appear as many times as it shows in both arrays the result can be in any order follow up what if the given array is already sorted? how would you optimize your algorithm? what if nums 's size is small compared to nums 's size? which algorithm is better? what if elements of nums are stored on disk and the memory is limited such that you cannot load all elements into the memory at once?
given a binary tree find its minimum depth the minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node
given a singly linked list where elements are sorted in ascending order convert it to a height balanced bst
assume you are an awesome parent and want to give your children some cookies but you should give each child at most one cookie each child i has a greed factor gi which is the minimum size of a cookie that the child will be content with and each cookie j has a size sj if sj gi we can assign the cookie j to the child i and the child i will be content your goal is to maximize the number of your content children and output the maximum number note you may assume the greed factor is always positive you cannot assign more than one cookie to one child example input output explanation you have children and cookies the greed factors of children are and even though you have cookies since their size is both you could only make the child whose greed factor is content you need to output example input output explanation you have children and cookies the greed factors of children are you have cookies and their sizes are big enough to gratify all of the children you need to output
suppose you have a random list of people standing in a queue each person is described by a pair of integers h k where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h write an algorithm to reconstruct the queue note the number of people is less than example input output
given a collection of intervals merge all overlapping intervals for example given return
you need to find the largest value in each row of a binary tree example input output
we are playing the guess game the game is as follows i pick a number from to n you have to guess which number i picked every time you guess wrong i'll tell you whether the number is higher or lower you call a pre defined api guess int num which returns possible results or my number is lower my number is higher congrats you got it example n i pick return
given an array of integers sorted in ascending order find the starting and ending position of a given target value your algorithm's runtime complexity must be in the order of o log n if the target is not found in the array return for example given and target value return
given a non empty d matrix matrix and an integer k find the max sum of a rectangle in the matrix such that its sum is no larger than k example given matrix k the answer is because the sum of rectangle is and is the max number no larger than k k note the rectangle inside the matrix must have an area what if the number of rows is much larger than the number of columns? credits special thanks to fujiaozhu for adding this problem and creating all test cases
given a binary tree find the maximum path sum for this problem a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent child connections the path must contain at least one node and does not need to go through the root for example given the below binary tree return
table dungeon dungeon th dungeon td border px solid black dungeon th dungeon td text align center height px width px the demons had captured the princess p and imprisoned her in the bottom right corner of a dungeon the dungeon consists of m x n rooms laid out in a d grid our valiant knight k was initially positioned in the top left room and must fight his way through the dungeon to rescue the princess the knight has an initial health point represented by a positive integer if at any point his health point drops to or below he dies immediately some of the rooms are guarded by demons so the knight loses health negative integers upon entering these rooms other rooms are either empty 's or contain magic orbs that increase the knight's health positive integers in order to reach the princess as quickly as possible the knight decides to move only rightward or downward in each step write a function to determine the knight's minimum initial health so that he is able to rescue the princess for example given the dungeon below the initial health of the knight must be at least if he follows the optimal path right right down down k p notes the knight's health has no upper bound any room can contain threats or power ups even the first room the knight enters and the bottom right room where the princess is imprisoned credits special thanks to stellari for adding this problem and creating all test cases
sort a linked list in o n log n time using constant space complexity
given a binary tree determine if it is height balanced for this problem a height balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than
in the game two players take turns adding to a running total any integer from the player who first causes the running total to reach or exceed wins what if we change the game so that players cannot re use integers? for example two players might take turns drawing from a common pool of numbers of without replacement until they reach a total given an integer maxchoosableinteger and another integer desiredtotal determine if the first player to move can force a win assuming both players play optimally you can always assume that maxchoosableinteger will not be larger than and desiredtotal will not be larger than example input maxchoosableinteger desiredtotal output false explanation no matter which integer the first player choose the first player will lose the first player can choose an integer from up to if the first player choose the second player can only choose integers from up to the second player will win by choosing and get a total which is desiredtotal same with other integers chosen by the first player the second player will always win
given a string s and a string t check if s is subsequence of t you may assume that there is only lower case english letters in both s and t t is potentially a very long length string and s is a short string a subsequence of a string is a new string which is formed from the original string by deleting some can be none of the characters without disturbing the relative positions of the remaining characters ie ace is a subsequence of abcde while aec is not example s abc t ahbgdc return true example s axc t ahbgdc return false follow up if there are lots of incoming s say s s sk where k b and you want to check one by one to see if t has its subsequence in this scenario how would you change your code? credits special thanks to pbrother for adding this problem and creating all test cases
there are a total of n courses you have to take labeled from to n some courses may have prerequisites for example to take course you have to first take course which is expressed as a pair given the total number of courses and a list of prerequisite pairs return the ordering of courses you should take to finish all courses there may be multiple correct orders you just need to return one of them if it is impossible to finish all courses return an empty array for example there are a total of courses to take to take course you should have finished course so the correct course order is there are a total of courses to take to take course you should have finished both courses and both courses and should be taken after you finished course so one correct course order is another correct ordering is note the input prerequisites is a graph represented by a list of edges not adjacency matrices read more about how a graph is represented you may assume that there are no duplicate edges in the input prerequisites click to show more hints hints this problem is equivalent to finding the topological order in a directed graph if a cycle exists no topological ordering exists and therefore it will be impossible to take all courses topological sort via dfs a great video tutorial minutes on coursera explaining the basic concepts of topological sort topological sort could also be done via bfs
given two binary trees write a function to check if they are equal or not two binary trees are considered equal if they are structurally identical and the nodes have the same value
you are a product manager and currently leading a team to develop a new product unfortunately the latest version of your product fails the quality check since each version is developed based on the previous version all the versions after a bad version are also bad suppose you have n versions n and you want to find out the first bad one which causes all the following ones to be bad you are given an api bool isbadversion version which will return whether version is bad implement a function to find the first bad version you should minimize the number of calls to the api credits special thanks to jianchao li fighter for adding this problem and creating all test cases
given a list of non negative integers arrange them such that they form the largest number for example given the largest formed number is note the result may be very large so you need to return a string instead of an integer credits special thanks to ts for adding this problem and creating all test cases
given a binary tree struct treelinknode treelinknode left treelinknode right treelinknode next populate each next pointer to point to its next right node if there is no next right node the next pointer should be set to null initially all next pointers are set to null note you may only use constant extra space you may assume that it is a perfect binary tree ie all leaves are at the same level and every parent has two children for example given the following perfect binary tree after calling your function the tree should look like null null null
given a list of words without duplicates please write a program that returns all concatenated words in the given list of words a concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array example input cat cats catsdogcats dog dogcatsdog hippopotamuses rat ratcatdogcat output catsdogcats dogcatsdog ratcatdogcat explanation catsdogcats can be concatenated by cats dog and cats dogcatsdog can be concatenated by dog cats and dog ratcatdogcat can be concatenated by rat cat dog and cat note the number of elements of the given array will not exceed the length sum of elements in the given array will not exceed all the input string will only include lower case letters the returned elements order does not matter
divide two integers without using multiplication division and mod operator if it is overflow return max int
in the video game fallout the quest road to freedom requires players to reach a metal dial called the freedom trail ring and use the dial to spell a specific keyword in order to open the door given a string ring which represents the code engraved on the outer ring and another string key which represents the keyword needs to be spelled you need to find the minimum number of steps in order to spell all the characters in the keyword initially the first character of the ring is aligned at direction you need to spell all the characters in the string key one by one by rotating the ring clockwise or anticlockwise to make each character of the string key aligned at direction and then by pressing the center button at the stage of rotating the ring to spell the key character key i you can rotate the ring clockwise or anticlockwise one place which counts as step the final purpose of the rotation is to align one of the string ring's characters at the direction where this character must equal to the character key i if the character key i has been aligned at the direction you need to press the center button to spell which also counts as step after the pressing you could begin to spell the next character in the key next stage otherwise you've finished all the spelling example input ring godding key gd output explanation for the first key character 'g' since it is already in place we just need step to spell this character for the second key character 'd' we need to rotate the ring godding anticlockwise by two steps to make it become ddinggo also we need more step for spelling so the final output is note length of both ring and key will be in range to there are only lowercase letters in both strings and might be some duplcate characters in both strings it's guaranteed that string key could always be spelled by rotating the string ring
implement int sqrt int x compute and return the square root of x
given an array of scores that are non negative integers player picks one of the numbers from either end of the array followed by the player and then player and so on each time a player picks a number that number will not be available for the next player this continues until all the scores have been chosen the player with the maximum score wins given an array of scores predict whether player is the winner you can assume each player plays to maximize his score example input output false explanation initially player can choose between and if he chooses or then player can choose from or and if player chooses then player will be left with or so final score of player is and player is hence player will never be the winner and you need to return false example input output true explanation player first chooses then player have to choose between and no matter which number player choose player can choose finally player has more score than player so you need to return true representing player can win note length of the array any scores in the given array are non negative integers and will not exceed if the scores of both players are equal then player is still the winner
given a binary search tree write a function kthsmallest to find the kth smallest element in it note you may assume k is always valid ≤ k ≤ bst's total elements follow up what if the bst is modified insert delete operations often and you need to find the kth smallest frequently? how would you optimize the kthsmallest routine? try to utilize the property of a bst what if you could modify the bst node's structure? the optimal runtime complexity is o height of bst credits special thanks to ts for adding this problem and creating all test cases
given two arrays write a function to compute their intersection example given nums nums return note each element in the result must be unique the result can be in any order
follow up for problem populating next right pointers in each node what if the given tree could be any binary tree? would your previous solution still work? note you may only use constant extra space for example given the following binary tree after calling your function the tree should look like null null null
given an integer array your task is to find all the different possible increasing subsequences of the given array and the length of an increasing subsequence should be at least example input output note the length of the given array will not exceed the range of integer in the given array is the given array may contain duplicates and two equal integers should also be considered as a special case of increasing sequence
follow up for find minimum in rotated sorted array what if duplicates are allowed? would this affect the run time complexity? how and why? suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand i e might become find the minimum element the array may contain duplicates
given an array of citations each citation is a non negative integer of a researcher write a function to compute the researcher's h index according to the definition of h index on wikipedia a scientist has index h if h of his her n papers have at least h citations each and the other n − h papers have no more than h citations each for example given citations which means the researcher has papers in total and each of them had received citations respectively since the researcher has papers with at least citations each and the remaining two with no more than citations each his h index is note if there are several possible values for h the maximum one is taken as the h index an easy approach is to sort the array first what are the possible values of h index? a faster approach is to use extra space credits special thanks to jianchao li fighter for adding this problem and creating all test cases
given four lists a b c d of integer values compute how many tuples i j k l there are such that a i b j c k d l is zero to make problem a bit easier all a b c d have same length of n where le n le all integers are in the range of to and the result is guaranteed to be at most example input a b c d output explanation the two tuples are a b c d a b c d
given a d grid map of ' 's land and ' 's water count the number of islands an island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically you may assume all four edges of the grid are all surrounded by water example answer example answer credits special thanks to mithmatt for adding this problem and creating all test cases
given a matrix consists of and find the distance of the nearest for each cell the distance between two adjacent cells is example input output example input output note the number of elements of the given matrix will not exceed there are at least one in the given matrix the cells are adjacent in only four directions up down left and right
given an integer matrix find the length of the longest increasing path from each cell you can either move to four directions left right up or down you may not move diagonally or move outside of the boundary i e wrap around is not allowed example nums return the longest increasing path is example nums return the longest increasing path is moving diagonally is not allowed credits special thanks to dietpepsi for adding this problem and creating all test cases
for an integer n we call k a good base of n if all digits of n base k are now given a string representing n you should return the smallest good base of n in string format example input output explanation base is example input output explanation base is example input output explanation base is note the range of n is the string representing n is always valid and will not have leading zeros
given an array of non negative integers you are initially positioned at the first index of the array each element in the array represents your maximum jump length at that position determine if you are able to reach the last index for example a return true a return false
given a string which contains only lowercase letters remove duplicate letters so that every letter appear once and only once you must make sure your result is the smallest in lexicographical order among all possible results example given bcabc return abc given cbacdcbc return acdb credits special thanks to dietpepsi for adding this problem and creating all test cases
given an unsorted array of integers find the length of longest increasing subsequence for example given the longest increasing subsequence is therefore the length is note that there may be more than one lis combination it is only necessary for you to return the length your algorithm should run in o n complexity follow up could you improve it to o n log n time complexity? credits special thanks to pbrother for adding this problem and creating all test cases
there are a number of spherical balloons spread in two dimensional space for each balloon provided input is the start and end coordinates of the horizontal diameter since it's horizontal y coordinates don't matter and hence the x coordinates of start and end of the diameter suffice start is always smaller than end there will be at most balloons an arrow can be shot up exactly vertically from different points along the x axis a balloon with xstart and xend bursts by an arrow shot at x if xstart le x le xend there is no limit to the number of arrows that can be shot an arrow once shot keeps travelling up infinitely the problem is to find the minimum number of arrows that must be shot to burst all balloons example input output explanation one way is to shoot one arrow for example at x bursting the balloons and and another arrow at x bursting the other two balloons
implement pow x n
write an efficient algorithm that searches for a value in an m x n matrix this matrix has the following properties integers in each row are sorted from left to right the first integer of each row is greater than the last integer of the previous row for example consider the following matrix  given target return true
you are given a list of non negative integers a a an and a target s now you have symbols and for each integer you should choose one from and as its new symbol find out how many ways to assign symbols to make sum of integers equal to target s example input nums is s is output explanation there are ways to assign symbols to make the sum of nums be target note the length of the given array is positive and will not exceed the sum of elements in the given array will not exceed your output answer is guaranteed to be fitted in a bit integer
follow up for search in rotated sorted array what if duplicates are allowed? would this affect the run time complexity? how and why? suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand i e might become write a function to determine if a given target is in the array the array may contain duplicates
given a complete binary tree count the number of nodes definition of a complete binary tree from wikipedia in a complete binary tree every level except possibly the last is completely filled and all nodes in the last level are as far left as possible it can have between and h nodes inclusive at the last level h
given a set of intervals for each of the interval i check if there exists an interval j whose start point is bigger than or equal to the end point of the interval i which can be called that j is on the right of i for any interval i you need to store the minimum interval j's index which means that the interval j has the minimum start point to build the right relationship for interval i if the interval j doesn't exist store for the interval i finally you need output the stored value of each interval as an array note you may assume the interval's end point is always bigger than its start point you may assume none of these intervals have the same start point example input output explanation there is only one interval in the collection so it outputs example input output explanation there is no satisfied right interval for for the interval has minimum right start point for the interval has minimum right start point example input output explanation there is no satisfied right interval for and for the interval has minimum right start point
you have a total of n coins that you want to form in a staircase shape where every k th row must have exactly k coins given n find the total number of full staircase rows that can be formed n is a non negative integer and fits within the range of a bit signed integer example n the coins can form the following rows ¤ ¤ ¤ ¤ ¤ because the rd row is incomplete we return example n the coins can form the following rows ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ because the th row is incomplete we return
given an m x n matrix of non negative integers representing the height of each unit cell in a continent the pacific ocean touches the left and top edges of the matrix and the atlantic ocean touches the right and bottom edges water can only flow in four directions up down left or right from a cell to another one with height equal or lower find the list of grid coordinates where water can flow to both the pacific and atlantic ocean note the order of returned grid coordinates does not matter both m and n are less than example given the following x matrix pacific  atlantic return positions with parentheses in above matrix
given a binary tree and a sum find all root to leaf paths where each path's sum equals the given sum for example given the below binary tree and sum  return
there are a total of n courses you have to take labeled from to n some courses may have prerequisites for example to take course you have to first take course which is expressed as a pair given the total number of courses and a list of prerequisite pairs is it possible for you to finish all courses? for example there are a total of courses to take to take course you should have finished course so it is possible there are a total of courses to take to take course you should have finished course and to take course you should also have finished course so it is impossible note the input prerequisites is a graph represented by a list of edges not adjacency matrices read more about how a graph is represented you may assume that there are no duplicate edges in the input prerequisites click to show more hints hints this problem is equivalent to finding if a cycle exists in a directed graph if a cycle exists no topological ordering exists and therefore it will be impossible to take all courses topological sort via dfs a great video tutorial minutes on coursera explaining the basic concepts of topological sort topological sort could also be done via bfs
there are two sorted arrays nums and nums of size m and n respectively find the median of the two sorted arrays the overall run time complexity should be o log m n example nums nums the median is example nums nums the median is
given a binary tree find the leftmost value in the last row of the tree example input output example input output note you may assume the tree i e the given root node is not null
say you have an array for which the ith element is the price of a given stock on day i design an algorithm to find the maximum profit you may complete as many transactions as you like ie buy one and sell one share of the stock multiple times however you may not engage in multiple transactions at the same time ie you must sell the stock before you buy again
follow up for h index what if the citations array is sorted in ascending order? could you optimize your algorithm? expected runtime complexity is in o log n and the input is sorted
given a binary tree flatten it to a linked list in place for example given the flattened tree should look like  click to show hints hints if you notice carefully in the flattened tree each node's right child points to the next node of a pre order traversal
given an unsorted array nums reorder it such that nums nums nums nums example given nums one possible answer is given nums one possible answer is note you may assume all input has valid answer follow up can you do it in o n time and or in place with o extra space? credits special thanks to dietpepsi for adding this problem and creating all test cases
given a sorted positive integer array nums and an integer n add patch elements to the array such that any number in range n inclusive can be formed by the sum of some elements in the array return the minimum number of patches required example nums n return combinations of nums are which form possible sums of now if we add patch to nums the combinations are  possible sums are which now covers the range so we only need patch example nums n return the two patches can be example nums n return credits special thanks to dietpepsi for adding this problem and creating all test cases
winter is coming your first job during the contest is to design a standard heater with fixed warm radius to warm all the houses now you are given positions of houses and heaters on a horizontal line find out minimum radius of heaters so that all houses could be covered by those heaters so your input will be the positions of houses and heaters seperately and your expected output will be the minimum radius standard of heaters note numbers of houses and heaters you are given are non negative and will not exceed positions of houses and heaters you are given are non negative and will not exceed as long as a house is in the heaters' warm radius range it can be warmed all the heaters follow your radius standard and the warm radius will the same example input output explanation the only heater was placed in the position and if we use the radius standard then all the houses can be warmed example input output explanation the two heater was placed in the position and we need to use radius standard then all the houses can be warmed
given an array which consists of non negative integers and an integer m you can split the array into m non empty continuous subarrays write an algorithm to minimize the largest sum among these m subarrays note if n is the length of array assume the following constraints are satisfied le n le le m le min n examples input nums m output explanation there are four ways to split nums into two subarrays the best way is to split it into and where the largest sum among the two subarrays is only
suppose leetcode will start its ipo soon in order to sell a good price of its shares to venture capital leetcode would like to work on some projects to increase its capital before the ipo since it has limited resources it can only finish at most k distinct projects before the ipo help leetcode design the best way to maximize its total capital after finishing at most k distinct projects you are given several projects for each project i it has a pure profit pi and a minimum capital of ci is needed to start the corresponding project initially you have w capital when you finish a project you will obtain its pure profit and the profit will be added to your total capital to sum up pick a list of at most k distinct projects from given projects to maximize your final capital and output your final maximized capital example input k w profits capital output explanation since your initial capital is you can only start the project indexed after finishing it you will obtain profit and your capital becomes with capital you can either start the project indexed or the project indexed since you can choose at most projects you need to finish the project indexed to get the maximum capital therefore output the final maximized capital which is note you may assume all numbers in the input are non negative integers the length of profits array and capital array will not exceed the answer is guaranteed to fit in a bit signed integer
given a binary tree return the zigzag level order traversal of its nodes' values ie from left to right then right to left for the next level and alternate between for example given binary tree null null return its zigzag level order traversal as
given a sorted array and a target value return the index if the target is found if not return the index where it would be if it were inserted in order you may assume no duplicates in the array here are few examples
sort a linked list using insertion sort
remember the story of little match girl? by now you know exactly what matchsticks the little match girl has please find out a way you can make one square by using up all those matchsticks you should not break any stick but you can link them up and each matchstick must be used exactly one time your input will be several matchsticks the girl has represented with their stick length your output will either be true or false to represent whether you could make one square using all the matchsticks the little match girl has example input output true explanation you can form a square with length one side of the square came two sticks with length example input output false explanation you cannot find a way to form a square with all the matchsticks note the length sum of the given matchsticks is in the range of to the length of the given matchstick array will not exceed
given a binary tree containing digits from only each root to leaf path could represent a number an example is the root to leaf path which represents the number find the total sum of all root to leaf numbers for example the root to leaf path represents the number the root to leaf path represents the number return the sum
a peak element is an element that is greater than its neighbors given an input array where num i ≠ num i find a peak element and return its index the array may contain multiple peaks in that case return the index to any one of the peaks is fine you may imagine that num num n ∞ for example in array is a peak element and your function should return the index number click to show spoilers note your solution should be in logarithmic complexity credits special thanks to ts for adding this problem and creating all test cases
for a undirected graph with tree characteristics we can choose any node as the root the result graph is then a rooted tree among all possible rooted trees those with minimum height are called minimum height trees mhts given such a graph write a function to find all the mhts and return a list of their root labels format the graph contains n nodes which are labeled from to n you will be given the number n and a list of undirected edges each edge is a pair of labels you can assume that no duplicate edges will appear in edges since all edges are undirected is the same as and thus will not appear together in edges example given n edges return example given n edges return how many mhts can a graph have at most? note according to the definition of tree on wikipedia “a tree is an undirected graph in which any two vertices are connected by exactly one path in other words any connected graph without simple cycles is a tree ” the height of a rooted tree is the number of edges on the longest downward path between the root and a leaf credits special thanks to dietpepsi for adding this problem and creating all test cases
given a binary tree check whether it is a mirror of itself ie symmetric around its center for example this binary tree is symmetric  but the following null null is not note bonus points if you could solve it both recursively and iteratively
given an array with n objects colored red white or blue sort them so that objects of the same color are adjacent with the colors in the order red white and blue here we will use the integers and to represent the color red white and blue respectively note you are not suppose to use the library's sort function for this problem click to show follow up follow up a rather straight forward solution is a two pass algorithm using counting sort first iterate the array counting number of 's 's and 's then overwrite array with total number of 's then 's and followed by 's could you come up with an one pass algorithm using only constant space?
given two arrays of length m and n with digits representing two numbers create the maximum number of length k m n from digits of the two the relative order of the digits from the same array must be preserved return an array of the k digits you should try to optimize your time and space complexity example nums nums k return example nums nums k return example nums nums k return credits special thanks to dietpepsi for adding this problem and creating all test cases
given two words beginword and endword and a dictionary's word list find all shortest transformation sequence s from beginword to endword such that only one letter can be changed at a time each transformed word must exist in the word list note that beginword is not a transformed word for example given beginword hit endword cog wordlist hot dot dog lot log cog return hit hot dot dog cog hit hot lot log cog note return an empty list if there is no such transformation sequence all words have the same length all words contain only lowercase alphabetic characters you may assume no duplicates in the word list you may assume beginword and endword are non empty and are not the same update the wordlist parameter had been changed to a list of strings instead of a set of strings please reload the code definition to get the latest changes
given a binary tree and a sum determine if the tree has a root to leaf path such that adding up all the values along the path equals the given sum for example given the below binary tree and sum  return true as there exist a root to leaf path which sum is
we are playing the guess game the game is as follows i pick a number from to n you have to guess which number i picked every time you guess wrong i'll tell you whether the number i picked is higher or lower however when you guess a particular number x and you guess wrong you pay x you win the game when you guess the number i picked example n i pick first round you guess i tell you that it's higher you pay second round you guess i tell you that it's higher you pay third round you guess i tell you that it's lower you pay game over is the number i picked you end up paying given a particular n ge find out how much money you need to have to guarantee a win the best strategy to play the game is to minimize the maximum loss you could possibly face another strategy is to minimize the expected loss here we are interested in the first scenario take a small example n what do you end up paying in the worst case? check out this article if you're still stuck the purely recursive implementation of minimax would be worthless for even a small n you must use dynamic programming as a follow up how would you modify your code to solve the problem of minimizing the expected loss instead of the worst case loss? credits special thanks to agave and stefanpochmann for adding this problem and creating all test cases
given an array of n positive integers and a positive integer s find the minimal length of a contiguous subarray of which the sum ≥ s if there isn't one return instead for example given the array and s the subarray has the minimal length under the problem constraint click to show more practice more practice if you have figured out the o n solution try coding another solution of which the time complexity is o n log n credits special thanks to freezen for adding this problem and creating all test cases
given two strings s and t write a function to determine if t is an anagram of s for example s anagram t nagaram return true s rat t car return false note you may assume the string contains only lowercase alphabets follow up what if the inputs contain unicode characters? how would you adapt your solution to such case?
there are n gas stations along a circular route where the amount of gas at station i is gas i you have a car with an unlimited gas tank and it costs cost i of gas to travel from station i to its next station i you begin the journey with an empty tank at one of the gas stations return the starting gas station's index if you can travel around the circuit once otherwise return note the solution is guaranteed to be unique
given an m x n matrix of positive integers representing the height of each unit cell in a d elevation map compute the volume of water it is able to trap after raining note both m and n are less than the height of each unit cell is greater than and is less than example given the following x height map  return the above image represents the elevation map before the rain after the rain water are trapped between the blocks the total volume of water trapped is
given a binary tree return the bottom up level order traversal of its nodes' values ie from left to right level by level from leaf to root for example given binary tree null null return its bottom up level order traversal as
given a binary tree find its maximum depth the maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node
think about zuma game you have a row of balls on the table colored red r yellow y blue b green g and white w you also have several balls in your hand each time you may choose a ball in your hand and insert it into the row including the leftmost place and rightmost place then if there is a group of or more balls in the same color touching remove these balls keep doing this until no more balls can be removed find the minimal balls you have to insert to remove all the balls on the table if you cannot remove all the balls output examples input wrrbbw rb output explanation wrrbbw wrr r bbw wbbw wbb b w ww input wwrrbbww wrbrw output explanation wwrrbbww wwrr r bbww wwbbww wwbb b ww wwww empty input g ggggg output explanation g g g gg g empty input rbyybbrrb yrbgb output explanation rbyybbrrb rbyy y bbrrb rbbbrrb rrrb b b b bb b empty note you may assume that the initial row of balls on the table won’t have any or more consecutive balls with the same color the number of balls on the table won't exceed and the string represents these balls is called board in the input the number of balls in your hand won't exceed and the string represents these balls is called hand in the input both input strings will be non empty and only contain characters 'r' 'y' 'b' 'g' 'w'
given an unsorted array find the maximum difference between the successive elements in its sorted form try to solve it in linear time space return if the array contains less than elements you may assume all elements in the array are non negative integers and fit in the bit signed integer range credits special thanks to porker for adding this problem and creating all test cases
given an array where elements are sorted in ascending order convert it to a height balanced bst
given a string and a string dictionary find the longest string in the dictionary that can be formed by deleting some characters of the given string if there are more than one possible results return the longest word with the smallest lexicographical order if there is no possible result return the empty string example input s abpcplea d ale apple monkey plea output apple example input s abpcplea d a b c output a note all the strings in the input will only contain lower case letters the size of the dictionary won't exceed the length of all the strings in the input won't exceed
given a binary tree imagine yourself standing on the right side of it return the values of the nodes you can see ordered from top to bottom for example given the following binary tree  you should return credits special thanks to amrsaqr for adding this problem and creating all test cases
write an efficient algorithm that searches for a value in an m x n matrix this matrix has the following properties integers in each row are sorted in ascending from left to right integers in each column are sorted in ascending from top to bottom for example consider the following matrix  given target return true given target return false
the thief has found himself a new place for his thievery again there is only one entrance to this area called the root besides the root each house has one and only one parent house after a tour the smart thief realized that all houses in this place forms a binary tree it will automatically contact the police if two directly linked houses were broken into on the same night determine the maximum amount of money the thief can rob tonight without alerting the police example maximum amount of money the thief can rob example maximum amount of money the thief can rob credits special thanks to dietpepsi for adding this problem and creating all test cases
a sequence of numbers is called a wiggle sequence if the differences between successive numbers strictly alternate between positive and negative the first difference if one exists may be either positive or negative a sequence with fewer than two elements is trivially a wiggle sequence for example is a wiggle sequence because the differences are alternately positive and negative in contrast and are not wiggle sequences the first because its first two differences are positive and the second because its last difference is zero given a sequence of integers return the length of the longest subsequence that is a wiggle sequence a subsequence is obtained by deleting some number of elements eventually also zero from the original sequence leaving the remaining elements in their original order examples input output the entire sequence is a wiggle sequence input output there are several subsequences that achieve this length one is input output follow up can you do it in o n time? credits special thanks to agave and stefanpochmann for adding this problem and creating all test cases
