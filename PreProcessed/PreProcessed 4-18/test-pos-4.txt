given binary tree determine height balanced problem height balanced binary tree defined binary tree depth two subtrees every node never differ
follow unique paths now consider obstacles added grids many unique paths obstacle empty space marked respectively grid example one obstacle middle grid illustrated total number unique paths note will
given array nums write function move end maintaining relative order non zero elements example given nums calling function nums note must place without making copy array minimize total number operations credits special thanks jianchao li fighter adding problem creating test cases
given binary search tree bst find lowest common ancestor lca two given nodes bst according definition lca wikipedia “the lowest common ancestor defined two nodes lowest node descendants allow node descendant ”  example lowest common ancestor lca nodes another example lca nodes since node can descendant according lca definition
given string containing just characters determine input string valid brackets must close correct order valid
given array integers already sorted ascending order find two numbers add specific target number function twosum return indices two numbers add target index must less index please note returned answers index index zero based may assume input exactly one solution may use element twice input numbers target output index index
given array integers integer find whether two distinct indices array nums nums absolute difference
given string sort decreasing order based frequency characters example input tree output eert explanation appears twice appear must appear therefore eetr also valid answer example input cccaaa output cccaaa explanation appear three times aaaccc also valid answer note cacaca incorrect characters must together example input aabb output bbaa explanation bbaa also valid answer aabb incorrect note treated two different characters
given array citations citation non negative integer researcher write function compute researcher index according definition index wikipedia scientist index h papers least citations − papers citations example given citations means researcher papers total received citations respectively since researcher papers least citations remaining two citations index note several possible values maximum one taken index easy approach sort array first possible values index faster approach use extra space credits special thanks jianchao li fighter adding problem creating test cases
rotate array elements right steps example array rotated note try come many solutions can least different ways solve problem show hint hint place extra space related problem reverse words string ii credits special thanks freezen adding problem creating test cases
given linked list value partition nodes less come nodes greater equal preserve original relative order nodes two partitions example given return
given arbitrary ransom note string another string containing letters magazines write function will return true ransom note can constructed magazines otherwise will return false letter magazine string can used ransom note note may assume strings contain lowercase letters canconstruct false canconstruct aa ab false canconstruct aa aab true
given unsorted array integers find length longest consecutive elements sequence example given longest consecutive elements sequence return length algorithm run complexity
given array objects colored red white blue sort objects color adjacent colors order red white blue will use integers represent color red white blue respectively note suppose use library sort function problem click show follow follow rather straight forward solution two pass algorithm using counting sort first iterate array counting number overwrite array total number followed come one pass algorithm using constant space
given string allowed convert palindrome adding characters front find return shortest palindrome can find performing transformation example given aacecaaa return aaacecaaa given abcd return dcbabcd credits special thanks ifanchu adding problem creating test cases thanks freezen additional test cases
given non empty array integers return third maximum number array exist return maximum number time complexity must example input output explanation third maximum example input output explanation third maximum exist maximum returned instead example input output explanation note third maximum means third maximum distinct number numbers value considered second maximum
you playing following bulls cows game friend write number ask friend guess number time friend makes guess provide hint indicates many digits said guess match secret number exactly digit position called bulls many digits match secret number locate wrong position called cows friend will use successive guesses hints eventually derive secret number example secret number friend guess hint bull cows bull cows write function return hint according secret number friend guess use indicate bulls indicate cows example function return please note secret number friend guess may contain duplicate digits example secret number friend guess case st friend guess bull nd rd cow function return may assume secret number friend guess contain digits lengths always equal credits special thanks jeantimex adding problem creating test cases
given string string dictionary find longest string dictionary can formed deleting characters given string one possible results return longest word smallest lexicographical order possible result return empty string example input abpcplea ale apple monkey plea output apple example input abpcplea output note strings input will contain lower case letters size dictionary won exceed length strings input won exceed
find possible combinations numbers add number given numbers can used combination unique set numbers example input output example input output  credits special thanks mithmatt adding problem creating test cases
given inorder postorder traversal tree construct binary tree note may assume duplicates exist tree
given binary tree return root leaf paths example given following binary tree root leaf paths credits special thanks jianchao li fighter adding problem creating test cases
given array integers find whether two distinct indices array absolute difference nums nums absolute difference
given integer array size find elements appear lfloor rfloor times algorithm run linear time space many majority elements possibly better hint suggest
given list rotate list right places non negative example given null return null
sort linked list using insertion sort
suppose leetcode will start ipo soon order sell good price shares venture capital leetcode like work projects increase capital ipo since limited resources can finish distinct projects ipo help leetcode design best way maximize total capital finishing distinct projects given several projects project pure profit pi minimum capital ci needed start corresponding project initially capital finish project will obtain pure profit profit will added total capital sum pick list distinct projects given projects maximize final capital output final maximized capital example input profits capital output explanation since initial capital can start project indexed finishing will obtain profit capital becomes capital can either start project indexed project indexed since can choose projects need finish project indexed get maximum capital therefore output final maximized capital note may assume numbers input non negative integers length profits array capital array will exceed answer guaranteed fit bit signed integer
sort linked list log time using constant space complexity
given two integers representing numerator denominator fraction return fraction string format fractional part repeating enclose repeating part parentheses example given numerator denominator return given numerator denominator return given numerator denominator return scary math just apply elementary math knowledge still remember perform long division try long division repeating part obvious now try see pattern wary edge cases list many test cases can think test code thoroughly credits special thanks shangrila adding problem creating test cases
implement basic calculator evaluate simple expression string expression string may contain open closing parentheses plus minus sign non negative integers empty spaces may assume given expression always valid examples note use eval built library function
given binary array find maximum length contiguous subarray equal number example input output explanation longest contiguous subarray equal number example input output explanation longest contiguous subarray equal number note length given binary array will exceed
given root tree asked find frequent subtree sum subtree sum node defined sum node values formed subtree rooted node including node frequent subtree sum value tie return values highest frequency order examples input return since values happen return order examples input return since happens twice however occur note may assume sum values subtree range bit signed integer
given singly linked list determine palindrome follow time space
compare two version numbers version version version gt version return version lt version return otherwise return may assume version strings non empty contain digits character character represent decimal point used separate number sequences instance two half half way version three fifth second level revision second first level revision example version numbers ordering lt lt lt credits special thanks ts adding problem creating test cases
say array ith element price given stock day permitted complete one transaction ie buy one sell one share stock design algorithm find maximum profit example input output max difference selling price needs larger buying price example input output case transaction done max profit
given root node reference bst key delete node given key bst return root node reference possibly updated bst basically deletion can divided two stages search node remove node found delete node note time complexity height tree example root null key given key delete find node value delete one valid answer null null shown following bst another valid answer null null
reverse linked list position place one pass example given null return null note given satisfy following condition ≤ ≤ ≤ length list
given triangle find minimum path sum top bottom step may move adjacent numbers row example given following triangle minimum path sum top bottom note bonus point able using extra space total number rows triangle
given unsorted integer array find first missing positive integer example given return return algorithm run time uses constant space
given binary tree determine valid binary search tree bst assume bst defined follows left subtree node contains nodes keys less node key right subtree node contains nodes keys greater node key left right subtrees must also binary search trees example binary tree return true example binary tree return false
given two sorted integer arrays nums nums merge nums nums one sorted array note may assume nums enough space size greater equal hold additional elements nums number elements initialized nums nums respectively
find kth largest element unsorted array note kth largest element sorted order kth distinct element example given return note may assume always valid ≤ ≤ array length credits special thanks mithmatt adding problem creating test cases
given binary tree check whether mirror ie symmetric around center example binary tree symmetric  following null null note bonus points solve recursively iteratively
