evaluate the value of an arithmetic expression in reverse polish notation valid operators are each operand may be an integer or another expression some examples
follow up for unique paths now consider if some obstacles are added to the grids how many unique paths would there be an obstacle and empty space is marked as and respectively in the grid for example there is one obstacle in the middle of a x grid as illustrated below the total number of unique paths is note m and n will be at most
given two strings s and t write a function to determine if t is an anagram of s for example s anagram t nagaram return true s rat t car return false note you may assume the string contains only lowercase alphabets follow up what if the inputs contain unicode characters how would you adapt your solution to such case
given a collection of integers that might contain duplicates nums return all possible subsets note the solution set must not contain duplicate subsets for example if nums a solution is
you are playing the following bulls and cows game with your friend you write down a number and ask your friend to guess what the number is each time your friend makes a guess you provide a hint that indicates how many digits in said guess match your secret number exactly in both digit and position called bulls and how many digits match the secret number but locate in the wrong position called cows your friend will use successive guesses and hints to eventually derive the secret number for example secret number friend s guess hint bull and cows the bull is the cows are and write a function to return a hint according to the secret number and friend s guess use a to indicate the bulls and b to indicate the cows in the above example your function should return a b please note that both secret number and friend s guess may contain duplicate digits for example secret number friend s guess in this case the st in friend s guess is a bull the nd or rd is a cow and your function should return a b you may assume that the secret number and your friend s guess only contain digits and their lengths are always equal credits special thanks to jeantimex for adding this problem and creating all test cases
given an array of words and a length l format the text such that each line has exactly l characters and is fully left and right justified you should pack your words in a greedy approach that is pack as many words as you can in each line pad extra spaces when necessary so that each line has exactly l characters extra spaces between words should be distributed as evenly as possible if the number of spaces on a line do not divide evenly between words the empty slots on the left will be assigned more spaces than the slots on the right for the last line of text it should be left justified and no extra space is inserted between words for example words this is an example of text justification l return the formatted lines as this is an example of text justification note each word is guaranteed not to exceed l in length click to show corner cases corner cases a line other than the last line might contain only one word what should you do in this case in this case that line should be left justified
given a data stream input of non negative integers a a an summarize the numbers seen so far as a list of disjoint intervals for example suppose the integers from the data stream are then the summary will be  follow up what if there are lots of merges and the number of disjoint intervals are small compared to the data stream s size credits special thanks to yunhong for adding this problem and creating most of the test cases
you are given two integer arrays nums and nums sorted in ascending order and an integer k define a pair u v which consists of one element from the first array and one element from the second array find the k pairs u v u v uk vk with the smallest sums example given nums nums k return the first pairs are returned from the sequence example given nums nums k return the first pairs are returned from the sequence  example given nums nums k return all possible pairs are returned from the sequence credits special thanks to elmirap and stefanpochmann for adding this problem and creating all test cases
given a binary tree determine if it is a valid binary search tree bst assume a bst is defined as follows the left subtree of a node contains only nodes with keys less than the node s key the right subtree of a node contains only nodes with keys greater than the node s key both the left and right subtrees must also be binary search trees example binary tree return true example binary tree return false
say you have an array for which the ith element is the price of a given stock on day i design an algorithm to find the maximum profit you may complete as many transactions as you like ie buy one and sell one share of the stock multiple times however you may not engage in multiple transactions at the same time ie you must sell the stock before you buy again
given an array of integers every element appears twice except for one find that single one note your algorithm should have a linear runtime complexity could you implement it without using extra memory
implement the following operations of a stack using queues push x push element x onto stack pop removes the element on top of the stack top get the top element empty return whether the stack is empty notes you must use only standard operations of a queue which means only push to back peek pop from front size and is empty operations are valid depending on your language queue may not be supported natively you may simulate a queue by using a list or deque double ended queue as long as you use only standard operations of a queue you may assume that all operations are valid for example no pop or top operations will be called on an empty stack credits special thanks to jianchao li fighter for adding this problem and all test cases
follow up for search in rotated sorted array what if duplicates are allowed would this affect the run time complexity how and why suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand i e might become write a function to determine if a given target is in the array the array may contain duplicates
given an integer n generate a square matrix filled with elements from to n in spiral order for example given n you should return the following matrix
given an array of integers that is already sorted in ascending order find two numbers such that they add up to a specific target number the function twosum should return indices of the two numbers such that they add up to the target where index must be less than index please note that your returned answers both index and index are not zero based you may assume that each input would have exactly one solution and you may not use the same element twice input numbers target output index index
you are given a binary tree in which each node contains an integer value find the number of paths that sum to a given value the path does not need to start or end at the root or a leaf but it must go downwards traveling only from parent nodes to child nodes the tree has no more than nodes and the values are in the range to example root null null sum return the paths that sum to are
given a string s and a non empty string p find all the start indices of p s anagrams in s strings consists of lowercase english letters only and the length of both strings s and p will not be larger than the order of output does not matter example input s cbaebabacd p abc output explanation the substring with start index is cba which is an anagram of abc the substring with start index is bac which is an anagram of abc example input s abab p ab output explanation the substring with start index is ab which is an anagram of ab the substring with start index is ba which is an anagram of ab the substring with start index is ab which is an anagram of ab
given a list of unique words find all pairs of distinct indices i j in the given list so that the concatenation of the two words i e words i words j is a palindrome example given words bat tab cat return the palindromes are battab tabbat example given words abcd dcba lls s sssll return the palindromes are dcbaabcd abcddcba slls llssssll credits special thanks to dietpepsi for adding this problem and creating all test cases
given an integer array nums find the sum of the elements between indices i and j i le j inclusive the update i val function modifies nums by updating the element at index i to val example given nums sumrange update sumrange note the array is only modifiable by the update function you may assume the number of calls to update and sumrange function is distributed evenly
you are given two arrays without duplicates nums and nums where nums â€™s elements are subset of nums find all the next greater numbers for nums s elements in the corresponding places of nums the next greater number of a number x in nums is the first greater number to its right in nums if it does not exist output for this number example input nums nums output explanation for number in the first array you cannot find the next greater number for it in the second array so output for number in the first array the next greater number for it in the second array is for number in the first array there is no next greater number for it in the second array so output example input nums nums output explanation for number in the first array the next greater number for it in the second array is for number in the first array there is no next greater number for it in the second array so output note all elements in nums and nums are unique the length of both nums and nums would not exceed
serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer or transmitted across a network connection link to be reconstructed later in the same or another computer environment design an algorithm to serialize and deserialize a binary search tree there is no restriction on how your serialization deserialization algorithm should work you just need to ensure that a binary search tree can be serialized to a string and this string can be deserialized to the original tree structure the encoded string should be as compact as possible note do not use class member global static variables to store states your serialize and deserialize algorithms should be stateless
given a singly linked list determine if it is a palindrome follow up could you do it in o n time and o space
given a complete binary tree count the number of nodes definition of a complete binary tree from wikipedia in a complete binary tree every level except possibly the last is completely filled and all nodes in the last level are as far left as possible it can have between and h nodes inclusive at the last level h
given an unsorted integer array find the first missing positive integer for example given return and return your algorithm should run in o n time and uses constant space
given a sequence of n integers a a an a pattern is a subsequence ai aj ak such that i j k and ai ak aj design an algorithm that takes a list of n numbers as input and checks whether there is a pattern in the list note n will be less than example input output false explanation there is no pattern in the sequence example input output true explanation there is a pattern in the sequence example input output true explanation there are three patterns in the sequence and
given n how many structurally unique bst s binary search trees that store values n for example given n there are a total of unique bst s
given a linked list swap every two adjacent nodes and return its head for example given you should return the list as your algorithm should use only constant space you may not modify the values in the list only nodes itself can be changed
find the sum of all left leaves in a given binary tree example there are two left leaves in the binary tree with values and respectively return
given a binary tree struct treelinknode treelinknode left treelinknode right treelinknode next populate each next pointer to point to its next right node if there is no next right node the next pointer should be set to null initially all next pointers are set to null note you may only use constant extra space you may assume that it is a perfect binary tree ie all leaves are at the same level and every parent has two children for example given the following perfect binary tree after calling your function the tree should look like null null null
given two binary trees write a function to check if they are equal or not two binary trees are considered equal if they are structurally identical and the nodes have the same value
implement next permutation which rearranges numbers into the lexicographically next greater permutation of numbers if such arrangement is not possible it must rearrange it as the lowest possible order ie sorted in ascending order the replacement must be in place do not allocate extra memory here are some examples inputs are in the left hand column and its corresponding outputs are in the right hand column
given an array s of n integers are there elements a b c in s such that a b c find all unique triplets in the array which gives the sum of zero note the solution set must not contain duplicate triplets for example given array s a solution set is
given an array with n objects colored red white or blue sort them so that objects of the same color are adjacent with the colors in the order red white and blue here we will use the integers and to represent the color red white and blue respectively note you are not suppose to use the library s sort function for this problem click to show follow up follow up a rather straight forward solution is a two pass algorithm using counting sort first iterate the array counting number of s s and s then overwrite array with total number of s then s and followed by s could you come up with an one pass algorithm using only constant space
given n non negative integers a a an where each represents a point at coordinate i ai n vertical lines are drawn such that the two endpoints of line i is at i ai and i find two lines which together with x axis forms a container such that the container contains the most water note you may not slant the container and n is at least
follow up for remove duplicates what if duplicates are allowed at most twice for example given sorted array nums your function should return length with the first five elements of nums being and it doesn t matter what you leave beyond the new length
given a root node reference of a bst and a key delete the node with the given key in the bst return the root node reference possibly updated of the bst basically the deletion can be divided into two stages search for a node to remove if the node is found delete the node note time complexity should be o height of tree example root null key given key to delete is so we find the node with value and delete it one valid answer is null null shown in the following bst another valid answer is null null
you need to find the largest value in each row of a binary tree example input output
given a binary tree return the postorder traversal of its nodes values for example given binary tree return note recursive solution is trivial could you do it iteratively
determine if a sudoku is valid according to sudoku puzzles the rules the sudoku board could be partially filled where empty cells are filled with the character a partially filled sudoku which is valid note a valid sudoku board partially filled is not necessarily solvable only the filled cells need to be validated
given a non empty array of integers return the k most frequent elements for example given and k return note you may assume k is always valid â‰¤ k â‰¤ number of unique elements your algorithm s time complexity must be better than o n log n where n is the array s size
given an array of citations each citation is a non negative integer of a researcher write a function to compute the researcher s h index according to the definition of h index on wikipedia a scientist has index h if h of his her n papers have at least h citations each and the other n âˆ’ h papers have no more than h citations each for example given citations which means the researcher has papers in total and each of them had received citations respectively since the researcher has papers with at least citations each and the remaining two with no more than citations each his h index is note if there are several possible values for h the maximum one is taken as the h index an easy approach is to sort the array first what are the possible values of h index a faster approach is to use extra space credits special thanks to jianchao li fighter for adding this problem and creating all test cases
write a function that takes a string as input and returns the string reversed example given s hello return olleh
