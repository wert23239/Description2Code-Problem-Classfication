given two strings consist lowercase letters string generated random shuffling string add one letter random position find letter added example input abcd abcde output explanation letter added
given binary search tree bst duplicates find mode frequently occurred element given bst assume bst defined follows left subtree node contains nodes keys less equal node key right subtree node contains nodes keys greater equal node key left right subtrees must also binary search trees example given bst null return note tree one mode can return order follow without using extra space assume implicit stack space incurred due recursion count
implement following operations queue using stacks push push element back queue pop removes element front queue peek get front element empty return whether queue empty notes must use standard operations stack means push top peek pop top size empty operations valid depending language stack may supported natively may simulate stack using list deque double ended queue long use standard operations stack may assume operations valid example pop peek operations will called empty queue
write efficient algorithm searches value matrix matrix following properties integers row sorted left right first integer row greater last integer previous row example consider following matrix  given target return true
given binary search tree bst convert greater tree every key original bst changed original key plus sum keys greater original key bst example input root binary search tree like output root greater tree like
you given two integer arrays nums nums sorted ascending order integer define pair consists one element first array one element second array find pairs uk vk smallest sums example given nums nums return first pairs returned sequence example given nums nums return first pairs returned sequence  example given nums nums return possible pairs returned sequence credits special thanks elmirap stefanpochmann adding problem creating test cases
follow remove duplicates duplicates allowed twice example given sorted array nums function return length first five elements nums doesn matter leave beyond new length
find sum left leaves given binary tree example two left leaves binary tree values respectively return
given singly linked list group odd nodes together followed even nodes please note talking node number value nodes try place program run space complexity nodes time complexity example given null return null note relative order inside even odd groups remain input first node considered odd second node even credits special thanks djangounchained adding problem creating test cases
given binary tree flatten linked list place example given flattened tree look like  click show hints hints notice carefully flattened tree node right child points next node pre order traversal
serialization process converting data structure object sequence bits can stored file memory buffer transmitted across network connection link reconstructed later another computer environment design algorithm serialize deserialize binary search tree restriction serialization deserialization algorithm work just need ensure binary search tree can serialized string string can deserialized original tree structure encoded string compact possible note use class member global static variables store states serialize deserialize algorithms stateless
given binary search tree non negative values find minimum absolute difference values two nodes example input  output explanation minimum absolute difference difference note least two nodes bst
given linked list reverse nodes linked list time return modified list positive integer less equal length linked list number nodes multiple left nodes end remain may alter values nodes nodes may changed constant memory allowed example given linked list return return
all dna composed series nucleotides abbreviated example acgaattccg studying dna sometimes useful identify repeated sequences within dna write function find letter long sequences substrings occur dna molecule example given aaaaacccccaaaaaccccccaaaaagggttt return aaaaaccccc cccccaaaaa
given binary tree sum determine tree root leaf path adding values along path equals given sum example given binary tree sum  return true exist root leaf path sum
the thief found new place thievery one entrance area called root besides root house one one parent house tour smart thief realized houses place forms binary tree will automatically contact police two directly linked houses broken night determine maximum amount money thief can rob tonight without alerting police example maximum amount money thief can rob example maximum amount money thief can rob credits special thanks dietpepsi adding problem creating test cases
given array integers nums return array output output equal product elements nums except nums solve without division example given return follow solve constant space complexity note output array count extra space purpose space complexity analysis
given sorted linked list delete duplicates element appear example given return given return
given integer array nums find sum elements indices le inclusive update val function modifies nums updating element index val example given nums sumrange update sumrange note array modifiable update function may assume number calls update sumrange function distributed evenly
given collection candidate numbers target number find unique combinations candidate numbers sums number may used combination note numbers including target will positive integers solution set must contain duplicate combinations example given candidate set target solution set
implement iterator binary search tree bst iterator will initialized root node bst calling next will return next smallest number bst note next hasnext run average time uses memory height tree credits special thanks ts adding problem creating test cases
you need find largest value row binary tree example input output
write function takes string input returns string reversed example given hello return olleh
given array size find majority element majority element element appears lfloor rfloor times may assume array non empty majority element always exist array credits special thanks ts adding problem creating test cases
given singly linked list →l →…→ln →ln reorder →ln→l →ln →l →ln →… must place without altering nodes values example given reorder
given input string reverse string word word example given sky blue return blue sky update programmers try solve place space click show clarification clarification constitutes word sequence non space characters constitutes word input string contain leading trailing spaces yes however reversed string contain leading trailing spaces multiple spaces two words reduce single space reversed string
given binary tree find leftmost value last row tree example input output example input output note may assume tree given root node null
given absolute path file unix style simplify example path home home path click show corner cases corner cases consider case path case return another corner case path might contain multiple slashes together home foo case ignore redundant slashes return home foo
given binary tree find lowest common ancestor lca two given nodes tree according definition lca wikipedia “the lowest common ancestor defined two nodes lowest node descendants allow node descendant ”  example lowest common ancestor lca nodes another example lca nodes since node can descendant according lca definition
given string string find minimum window will contain characters complexity example adobecodebanc abc minimum window banc note window covers characters return empty string multiple windows guaranteed will always one unique minimum window
find contiguous subarray within array containing least one number largest sum example given array contiguous subarray largest sum click show practice practice figured solution try coding another solution using divide conquer approach subtle
a robot located top left corner grid marked start diagram robot can move either right point time robot trying reach bottom right corner grid marked finish diagram many possible unique paths grid many possible unique paths note will
given points plane find maximum number points lie straight line
given binary tree sum find root leaf paths path sum equals given sum example given binary tree sum  return
implement basic calculator evaluate simple expression string expression string contains non negative integers operators empty spaces integer division truncate toward zero may assume given expression always valid examples  note use eval built library function credits special thanks ts adding problem creating test cases
given binary tree find maximum path sum problem path defined sequence nodes starting node node tree along parent child connections path must contain least one node need go root example given binary tree return
implement next permutation rearranges numbers lexicographically next greater permutation numbers arrangement possible must rearrange lowest possible order ie sorted ascending order replacement must place allocate extra memory examples inputs left hand column corresponding outputs right hand column
given string consists upper lower case alphabets empty space characters return length last word string last word exist return note word defined character sequence consists non space characters example given hello world return
given list words return words can typed using letters alphabet one row american keyboard like image example input hello alaska dad peace output alaska dad note may use one character keyboard may assume input string will contain letters alphabet
given binary tree return postorder traversal nodes values example given binary tree return note recursive solution trivial iteratively
given array nums sliding window size moving left array right can see numbers window time sliding window moves right one position example given nums window position max   therefore return max sliding window note may assume always valid ie ≤ ≤ input array size non empty array follow solve linear time using data structure deque double ended queue queue size need the window’s size remove redundant elements queue store elements need considered
given linked list remove nth node end list return head example given linked list removing second node end linked list becomes note given will always valid try one pass
