you given two positive integers binary representation find following sum modulo operation means exclusive operation operation means binary shift left please note consider ideal model binary integers infinite number bits number disappearings cyclic shifts bits
there pairs hard disk drives hdds cluster hdd located integer coordinate infinite straight line pair consists one primary hdd one backup hdd next want place computers integer coordinates infinite straight line pair hdds must connected single computer via wires computer can number even zero hdds connected length wire connecting single hdd computer absolute value distance respective coordinates infinite line consider total length wire used connect hdds computers sum lengths wires used connect hdds computers note primary secondary hdds pair must connect computer given locations pairs primary backup hdds value place computers way total length wire needed connect pair hdds computers minimal print total length new line
given non negative integer count numbers unique digits le lt example given return answer total numbers range le lt excluding direct way use backtracking approach backtracking contains three states current number number steps get number bitmask represent number marked visited far current number start state count valid number till reach number steps equals problem can also solved using dynamic programming approach knowledge combinatorics let count numbers unique digits length equals first factor number start credits special thanks memoryless adding problem creating test cases
given string partition every substring partition palindrome return minimum cuts needed palindrome partitioning example given aab return since palindrome partitioning aa produced using cut
the tower hanoi famous game consisting rods number discs incrementally different diameters puzzle starts discs neatly stacked one rod ordered ascending size smallest disc top game objective move entire stack another rod obeying following rules one disc can moved time move consists taking topmost disc stack moving top another stack disc may placed top smaller disc gena modified version tower hanoi hanoi rods discs ordered ascending size made moves following rules stopped lost place wants restore tower original state making valid moves given state gena hanoi help calculate minimum number moves needed restore tower original state note gena rods numbered discs initially located rod
the evil forest guarded vicious mandragoras mandragora health points garnet pet begin journey evil forest strength points experience points undefeated mandragora can perform either following actions garnet pet eats mandragora increments defeats mandragora garnet pet battles mandragora increases experience points defeats mandragora mandragora can defeated garnet can defeat mandragoras order given respective health points mandragora can find maximum number experience points can earn defeating mandragoras
we playing guess game game follows pick number guess number picked every time guess wrong ll tell whether number picked higher lower however guess particular number guess wrong pay win game guess number picked example pick first round guess tell higher pay second round guess tell higher pay third round guess tell lower pay game number picked end paying given particular ge find much money need to guarantee win best strategy play game minimize maximum loss possibly face another strategy minimize expected loss interested first scenario take small example end paying worst case check article re still stuck purely recursive implementation minimax worthless even small must use dynamic programming follow modify code solve problem minimizing expected loss instead worst case loss credits special thanks agave stefanpochmann adding problem creating test cases
for integer call good base digits base now given string representing return smallest good base string format example input output explanation base example input output explanation base example input output explanation base note range string representing always valid will leading zeros
for undirected graph tree characteristics can choose node root result graph rooted tree among possible rooted trees minimum height called minimum height trees mhts given graph write function find mhts return list root labels format graph contains nodes labeled will given number list undirected edges edge pair labels can assume duplicate edges will appear edges since edges undirected thus will appear together edges example given edges return example given edges return many mhts can graph note according definition tree wikipedia “a tree undirected graph two vertices connected exactly one path words connected graph without simple cycles tree ” height rooted tree number edges longest downward path root leaf credits special thanks dietpepsi adding problem creating test cases
zurikela creating graph special graph maker begining empty nodes edges can perform types operations create set new nodes name create edges nodes create set composed nodes directly indirectly connected nodes called note node can exist one set sets become empty first name will first third operation referring index new set index last created set create graph completing operations specified input calculate maximum number independent nodes many nodes final graph don direct edge
given matrix positive integers representing height unit cell elevation map compute volume water able trap raining note less height unit cell greater less example given following height map  return image represents elevation map rain rain water trapped blocks total volume water trapped
given array integers line segments endpoints segment imagine top segment horizontal ray shot left ray stops touches another segment hits axis construct array integers equal length ray shot top segment define example shown picture vertical png permutation can calculate choose uniformly random permutation expected value
steve loves playing palindromes string consisting lowercase english alphabetic characters wants calculate number ways insert exactly lowercase character string length longest palindromic subsequence increases least two ways considered different either following conditions satisfied positions insertion different inserted characters different means different ways insert exactly character string length given queries consisting print number different ways inserting exactly new lowercase letter string length longest palindromic subsequence increases least
one day wet shark given array always started playing subsequences came know habit presented task finding pairs subsequences satisfies following constraints will represent pair subsequence must length please help wet shark determine many possible subsequences can exist number choices may big output answer modulo note two segments different exists least one index element present exactly one subsequences can overlap subsequences necessarily distinct
write program solve sudoku puzzle filling empty cells empty cells indicated character may assume will one unique solution sudoku puzzle solution numbers marked red
remember story little match girl now know exactly matchsticks little match girl please find way can make one square using matchsticks break stick can link matchstick must used exactly one time input will several matchsticks girl represented stick length output will either true false represent whether make one square using matchsticks little match girl example input output true explanation can form square length one side square came two sticks length example input output false explanation find way form square matchsticks note length sum given matchsticks range length given matchstick array will exceed
numeros artist two lists permutation numeros proud lists unfortunately transporting one exhibition another numbers left can find missing numbers notes number occurs multiple times lists must ensure frequency number lists case also missing number print missing numbers ascending order print missing number even missing multiple times difference maximum minimum number less equal
given set distinct positive integers find largest subset every pair si sj elements subset satisfies si sj sj si multiple solutions return subset fine example nums result course will also ok example nums result credits special thanks stomach ache adding problem creating test cases
given non empty matrix matrix integer find max sum rectangle matrix sum larger example given matrix answer sum rectangle max number larger note rectangle inside matrix must area number rows much larger number columns credits special thanks fujiaozhu adding problem creating test cases
there two sorted arrays nums nums size respectively find median two sorted arrays overall run time complexity log example nums nums median example nums nums median
given two arrays length digits representing two numbers create maximum number length digits two relative order digits array must preserved return array digits try optimize time space complexity example nums nums return example nums nums return example nums nums return credits special thanks dietpepsi adding problem creating test cases
given positive integer num write function returns true num perfect square else false note use built library function sqrt example input returns true example input returns false credits special thanks elmirap adding problem creating test cases
nikita making graph birthday gift boyfriend fellow programmer drew undirected connected graph nodes numbered notebook node shaded either white black define number white nodes number black nodes graph drawn way adjacent nodes coloring value ll call minimal nikita mischievous little brother erased edges coloring graph result graph now decomposed one components re best friend ve decided help reconstruct graph adding edges aforementioned graph properties hold true given decomposed graph construct shade valid connected graph difference shaded nodes minimal
given unsorted array find maximum difference successive elements sorted form try solve linear time space return array contains less elements may assume elements array non negative integers fit bit signed integer range credits special thanks porker adding problem creating test cases
you can perform following operation string capitalize zero lowercase letters index make uppercase delete remaining lowercase letters given queries form two strings determine possible make equal performing operation can transformed print yes new line otherwise print
given positive integer break sum least two positive integers maximize product integers return maximum product can get example given return given return note may assume less larger simple solution problem may check breaking results ranging discover regularities credits special thanks jianchao li fighter adding problem creating test cases
a new gangster trying take control city makes list adversaries gangster gangster gangster gangster plans get rid mercenaries willing job gangster can use number mercenaries honor one condition set assigned way eliminate consecutive group gangsters list gangster gangster gangster gangster following true new gangster wants kill also wants pay least amount money mercenaries charge different amount kill different people asks help minimize expenses
let talk binary numbers digit binary number denote digit index zero indexed right left can find decimal value using following formula example binary number compute decimal value like meanwhile known decimal number system digit ranges value decimal number can expanded way now ve discussed systems let combine decimal binary numbers new system call decibinary number system digit ranges like decimal number system place value digit corresponds one binary number system example decibinary number represents decimal number pretty cool system right unfortunately problem two different decibinary numbers evaluate decimal value example decibinary number also evaluates decimal value major problem new number system real applications beyond challenge consider infinite list non negative decibinary numbers sorted according following rules decibinary numbers sorted increasing order decimal value evaluate two decibinary numbers evaluate decimal value ordered increasing decimal value meaning equivalent decibinary values strictly interpreted compared decimal values smaller decimal value ordered first example evaluate order list first decibinary numbers will given queries form integer find print decibinary number list new line input format first line contains integer denoting number queries line subsequent lines contains single integer describing query
there huge blanket bed unfortunately stains cover using single rectangular silk cloth silk expensive rectangular piece needs least area possible love blanket decide minimize area covering stains buy cleaning liquid remove stains sadly isn enough clean can just remove exactly stains rest stains need covered using single rectangular fragment silk cloth let denote area smallest possible silk cloth may cover stains originally need find number different ways may remove stains remaining stains can covered silk area strictly less looking configuration will reduce cost assume stain point rectangle aligned parallel axes
each time sunny johnny take trip ice cream parlor pool together dollars ice cream given day parlor offers line flavors flavor numbered sequentially unique number cost associated given value cost flavor trips ice cream parlor help sunny johnny choose two flavors spend entire pool money visit trip parlor print numbers two types ice cream sunny johnny purchase two space separated integers new line must print smaller first larger second note two ice creams unique ids may cost
a binary watch leds top represent hours leds bottom represent minutes led represents zero one least significant bit right example binary watch reads given non negative integer represents number leds currently return possible times watch represent example input return note order output matter hour must contain leading zero example valid minute must consist two digits may contain leading zero example valid
given array scores non negative integers player picks one numbers either end array followed player player time player picks number number will available next player continues scores chosen player maximum score wins given array scores predict whether player winner can assume player plays maximize score example input output false explanation initially player can choose chooses player can choose player chooses player will left final score player player hence player will never winner need return false example input output true explanation player first chooses player choose matter number player choose player can choose finally player score player need return true representing player can win note length array scores given array non negative integers will exceed scores players equal player still winner
we call sequence natural numbers sequence product two adjacent numbers greater words sequence sequence ai ai ≤ ∀ ≤ given task find number sequences integers modulo
a war broken vim emacs gedit vim ally captured emacs prisoner war vim rescue defeating emacs task vim assemble army appropriate skills can choose non empty subset soldiers set soldiers numbered soldier subset skills different skills numbered skill set army union skill sets constituent soldiers win war vim needs know many different subsets soldiers satisfy skill set requirement since answer can huge print modulo note chosen army skill set must exactly match skill set requirement vim extra skills must present army skill set required
consider array integers perform queries following type sort elements subsegment given can find print value index performing queries
a pair nodes similar pair following conditions true node ancestor node given tree node labeled can find number similar pairs tree
you friend decide play game using stack consisting bricks game can alternatively remove bricks top numbers etched removed bricks added score play obtain maximum possible score given friend will also play optimally make first move
there total courses take labeled courses may prerequisites example take course first take course expressed pair given total number courses list prerequisite pairs return ordering courses take finish courses may multiple correct orders just need return one impossible finish courses return empty array example total courses take take course finished course correct course order total courses take take course finished courses courses taken finished course one correct course order another correct ordering note input prerequisites graph represented list edges adjacency matrices read graph represented may assume duplicate edges input prerequisites click show hints hints problem equivalent finding topological order directed graph cycle exists topological ordering exists therefore will impossible take courses topological sort via dfs great video tutorial minutes coursera explaining basic concepts topological sort topological sort also done via bfs
you given hexagonal grid size xn task construct grid dominoes dominoes can arranged three orientations shown add woes certain cells hexagonal grid blackened domino can occupy cell can construct hexagonal grid blackened cell dominoes shown figure
you total coins want form staircase shape every th row must exactly coins given find total number full staircase rows can formed non negative integer fits within range bit signed integer example coins can form following rows ¤ ¤ ¤ ¤ ¤ rd row incomplete return example coins can form following rows ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ th row incomplete return
given four lists integer values compute many tuples zero make problem bit easier length le le integers range result guaranteed example input output explanation two tuples
remove minimum number invalid parentheses order make input string valid return possible results note input string may contain letters parentheses examples  credits special thanks hpplayer adding problem creating test cases
you rectangular board consisting rows numbered columns numbered top left bottom right initially time coin top left cell board cell board contains one letters exactly one cells letter time coin cell cell letter coin will cell time otherwise coin board time time coin cell cell letter coin will cell time otherwise coin board time time coin cell cell letter coin will cell time otherwise coin board time time coin cell cell letter coin will cell time otherwise coin board time coin reaches cell letter will stay permanently punch board timer starts coin moves cells starting game can make operations change board sure time coin will reach cell letter operation can select cell letter change letter need carry operations possible order achieve goal task find minimum number operations
given integer find smallest integer divisible factor satisfies following properties must contain zeroes decimal representation sum digits must greater equal product digits given find print number digits decimal representation
given non negative integer number num every numbers range le le num calculate number binary representation return array example num return follow easy come solution run time sizeof integer can linear time possibly single pass space complexity can like boss without using builtin function like builtin popcount language make use produced already divide numbers ranges like try generate new range previous odd even status number help calculating number credits special thanks syedee adding problem creating test cases
consider string lowercase english letters character denotes letter index define palindromic tuple sequence indices satisfying following criteria meaning characters located indices meaning characters located indices meaning ascending value valid indices within string given find print number tuples satisfying conditions value can quite large print modulo
there total courses take labeled courses may prerequisites example take course first take course expressed pair given total number courses list prerequisite pairs possible finish courses example total courses take take course finished course possible total courses take take course finished course take course also finished course impossible note input prerequisites graph represented list edges adjacency matrices read graph represented may assume duplicate edges input prerequisites click show hints hints problem equivalent finding cycle exists directed graph cycle exists topological ordering exists therefore will impossible take courses topological sort via dfs great video tutorial minutes coursera explaining basic concepts topological sort topological sort also done via bfs
