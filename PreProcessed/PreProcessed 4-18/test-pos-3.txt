given string integer need reverse first characters every characters counting start string less characters left reverse less greater equal characters reverse first characters left original example input abcdefg output bacdfeg restrictions string consists lower english letters length given string will range
implement strstr returns index first occurrence needle haystack needle part haystack
given points plane pairwise distinct boomerang tuple points distance equals distance order tuple matters find number boomerangs may assume will coordinates points range inclusive example input output explanation two boomerangs
given sorted array remove duplicates place element appear return new length allocate extra space another array must place constant memory example given input array nums function return length first two elements nums respectively doesn matter leave beyond new length
given array integers every element appears twice except one find single one note algorithm linear runtime complexity implement without using extra memory
given non empty array integers return frequent elements example given return note may assume always valid ≤ ≤ number unique elements algorithm time complexity must better log array size
say array ith element price given stock day design algorithm find maximum profit may complete two transactions note may engage multiple transactions time ie must sell stock buy
given preorder inorder traversal tree construct binary tree note may assume duplicates exist tree
given array non negative integers initially positioned first index array element array represents maximum jump length position goal reach last index minimum number jumps example given array minimum number jumps reach last index jump step index steps last index note can assume can always reach last index
given numrows generate first numrows pascal triangle example given numrows return
given array non negative integers initially positioned first index array element array represents maximum jump length position determine able reach last index example return true return false
given matrix elements rows columns return elements matrix spiral order example given following matrix  return
follow find minimum rotated sorted array duplicates allowed affect run time complexity suppose array sorted ascending order rotated pivot unknown beforehand might become find minimum element array may contain duplicates
given non negative integers represents point coordinate ai vertical lines drawn two endpoints line ai find two lines together axis forms container container contains water note may slant container least
given array integers elements find unique triplets array gives sum zero note solution set must contain duplicate triplets example given array solution set
given two words beginword endword dictionary word list find shortest transformation sequence beginword endword one letter can changed time transformed word must exist word list note beginword transformed word example given beginword hit endword cog wordlist hot dot dog lot log cog return hit hot dot dog cog hit hot lot log cog note return empty list transformation sequence words length words contain lowercase alphabetic characters may assume duplicates word list may assume beginword endword non empty update wordlist parameter changed list strings instead set strings please reload code definition get latest changes
find contiguous subarray within array containing least one number largest product example given array contiguous subarray largest product
remove elements linked list integers value val example given val return credits special thanks mithmatt adding problem creating test cases
design data structure supports following operations average time insert val inserts item val set already present remove val removes item val set present getrandom returns random element current set elements element must probability returned example init empty set randomizedset randomset new randomizedset inserts set returns true inserted successfully randomset insert returns false exist set randomset remove inserts set returns true set now contains randomset insert getrandom return either randomly randomset getrandom removes set returns true set now contains randomset remove already set return false randomset insert since number set getrandom always return randomset getrandom
given nested list integers implement iterator flatten element either integer list whose elements may also integers lists example given list calling next repeatedly hasnext returns false order elements returned next example given list calling next repeatedly hasnext returns false order elements returned next
given sorted linked list delete nodes duplicate numbers leaving distinct numbers original list example given return given return
given pattern string str find str follows pattern follow means full match bijection letter pattern non empty word str examples pattern abba str dog cat cat dog return true pattern abba str dog cat cat fish return false pattern aaaa str dog cat cat dog return false pattern abba str dog dog dog dog return false notes may assume pattern contains lowercase letters str contains lowercase letters separated single space credits special thanks minglotus adding problem creating test cases
you given binary tree node contains integer value find number paths sum given value path need start end root leaf must go downwards traveling parent nodes child nodes tree nodes values range example root null null sum return paths sum
given string non empty string find start indices anagrams strings consists lowercase english letters length strings will larger order output matter example input cbaebabacd abc output explanation substring start index cba anagram abc substring start index bac anagram abc example input abab ab output explanation substring start index ab anagram ab substring start index ba anagram ab substring start index ab anagram ab
design stack supports push pop top retrieving minimum element constant time push push element onto stack pop removes element top stack top get top element getmin retrieve minimum element stack example minstack minstack new minstack minstack push minstack push minstack push minstack getmin returns minstack pop minstack top returns minstack getmin returns
follow problem populating next right pointers node given tree binary tree previous solution still work note may use constant extra space example given following binary tree calling function tree look like null null null
given array nums call important reverse pair lt nums gt nums need return number important reverse pairs given array example input output example input output note length given array will exceed numbers input array range bit integer
implement following operations stack using queues push push element onto stack pop removes element top stack top get top element empty return whether stack empty notes must use standard operations queue means push back peek pop front size empty operations valid depending language queue may supported natively may simulate queue using list deque double ended queue long use standard operations queue may assume operations valid example pop top operations will called empty stack credits special thanks jianchao li fighter adding problem test cases
evaluate value arithmetic expression reverse polish notation valid operators operand may integer another expression examples
given collection integers might contain duplicates nums return possible subsets note solution set must contain duplicate subsets example nums solution
given binary tree find minimum depth minimum depth number nodes along shortest path root node nearest leaf node
count number segments string segment defined contiguous sequence non space characters please note string contain non printable characters example input hello name john output
given array value remove instances value place return new length allocate extra space another array must place constant memory order elements can changed doesn matter leave beyond new length example given input array nums val function return length first two elements nums try two pointers use property order elements can changed happens elements remove rare
given binary tree return zigzag level order traversal nodes values ie left right right left next level alternate example given binary tree null null return zigzag level order traversal
given array strings group anagrams together example given eat tea tan ate nat bat return ate eat tea nat tan bat note inputs will lower case
given binary tree containing digits root leaf path represent number example root leaf path represents number find total sum root leaf numbers example root leaf path represents number root leaf path represents number return sum
given string find longest palindromic substring may assume maximum length example input babad output bab note aba also valid answer example input cbbd output bb
you given two arrays without duplicates nums nums nums ’s elements subset nums find next greater numbers nums elements corresponding places nums next greater number number nums first greater number right nums exist output number example input nums nums output explanation number first array find next greater number second array output number first array next greater number second array number first array next greater number second array output example input nums nums output explanation number first array next greater number second array number first array next greater number second array output note elements nums nums unique length nums nums exceed
given string determine palindrome considering alphanumeric characters ignoring cases example man plan canal panama palindrome race car palindrome note consider string might empty good question ask interview purpose problem define empty string valid palindrome
given list unique words find pairs distinct indices given list concatenation two words words words palindrome example given words bat tab cat return palindromes battab tabbat example given words abcd dcba lls sssll return palindromes dcbaabcd abcddcba slls llssssll credits special thanks dietpepsi adding problem creating test cases
given non negative integer represented non empty array digits plus one integer may assume integer contain leading zero except number digits stored significant digit head list
you given string list words words length find starting indices substring concatenation word words exactly without intervening characters example given barfoothefoobarman words foo bar return indices order matter
given array elements sorted ascending order convert height balanced bst
