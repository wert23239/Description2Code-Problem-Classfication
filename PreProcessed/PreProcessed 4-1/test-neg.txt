in the video game fallout the quest road to freedom requires players to reach a metal dial called the freedom trail ring and use the dial to spell a specific keyword in order to open the door given a string ring which represents the code engraved on the outer ring and another string key which represents the keyword needs to be spelled you need to find the minimum number of steps in order to spell all the characters in the keyword initially the first character of the ring is aligned at direction you need to spell all the characters in the string key one by one by rotating the ring clockwise or anticlockwise to make each character of the string key aligned at direction and then by pressing the center button at the stage of rotating the ring to spell the key character key i you can rotate the ring clockwise or anticlockwise one place which counts as step the final purpose of the rotation is to align one of the string ring's characters at the direction where this character must equal to the character key i if the character key i has been aligned at the direction you need to press the center button to spell which also counts as step after the pressing you could begin to spell the next character in the key next stage otherwise you've finished all the spelling example input ring godding key gd output explanation for the first key character 'g' since it is already in place we just need step to spell this character for the second key character 'd' we need to rotate the ring godding anticlockwise by two steps to make it become ddinggo also we need more step for spelling so the final output is note length of both ring and key will be in range to there are only lowercase letters in both strings and might be some duplcate characters in both strings it's guaranteed that string key could always be spelled by rotating the string ring
given two strings s and t write a function to determine if t is an anagram of s for example s anagram t nagaram return true s rat t car return false note you may assume the string contains only lowercase alphabets follow up what if the inputs contain unicode characters how would you adapt your solution to such case
given a non empty array containing only positive integers find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal note each of the array element will not exceed the array size will not exceed example input output true explanation the array can be partitioned as and example input output false explanation the array cannot be partitioned into equal sum subsets
given a string s find the longest palindromic subsequence's length in s you may assume that the maximum length of s is example input bbbab output one possible longest palindromic subsequence is bbbb example input cbbd output one possible longest palindromic subsequence is bb
given an integer matrix find the length of the longest increasing path from each cell you can either move to four directions left right up or down you may not move diagonally or move outside of the boundary i e wrap around is not allowed example nums return the longest increasing path is example nums return the longest increasing path is moving diagonally is not allowed credits special thanks to dietpepsi for adding this problem and creating all test cases
given a binary tree imagine yourself standing on the right side of it return the values of the nodes you can see ordered from top to bottom for example given the following binary tree  you should return credits special thanks to amrsaqr for adding this problem and creating all test cases
given two integers n and k return all possible combinations of k numbers out of n for example if n and k a solution is
there are a total of n courses you have to take labeled from to n some courses may have prerequisites for example to take course you have to first take course which is expressed as a pair given the total number of courses and a list of prerequisite pairs return the ordering of courses you should take to finish all courses there may be multiple correct orders you just need to return one of them if it is impossible to finish all courses return an empty array for example there are a total of courses to take to take course you should have finished course so the correct course order is there are a total of courses to take to take course you should have finished both courses and both courses and should be taken after you finished course so one correct course order is another correct ordering is note the input prerequisites is a graph represented by a list of edges not adjacency matrices read more about how a graph is represented you may assume that there are no duplicate edges in the input prerequisites click to show more hints hints this problem is equivalent to finding the topological order in a directed graph if a cycle exists no topological ordering exists and therefore it will be impossible to take all courses topological sort via dfs a great video tutorial minutes on coursera explaining the basic concepts of topological sort topological sort could also be done via bfs
given a non negative integer n count all numbers with unique digits x where le x lt n example given n return the answer should be the total numbers in the range of le x lt excluding a direct way is to use the backtracking approach backtracking should contains three states which are the current number number of steps to get that number and a bitmask which represent which number is marked as visited so far in the current number start with state and count all valid number till we reach number of steps equals to n this problem can also be solved using a dynamic programming approach and some knowledge of combinatorics let f k count of numbers with unique digits with length equals k f f k k the first factor is because a number cannot start with credits special thanks to memoryless for adding this problem and creating all test cases
given inorder and postorder traversal of a tree construct the binary tree note you may assume that duplicates do not exist in the tree
given a binary tree flatten it to a linked list in place for example given the flattened tree should look like  click to show hints hints if you notice carefully in the flattened tree each node's right child points to the next node of a pre order traversal
given an integer array with all positive numbers and no duplicates find the number of possible combinations that add up to a positive integer target example nums target the possible combination ways are note that different sequences are counted as different combinations therefore the output is follow up what if negative numbers are allowed in the given array how does it change the problem what limitation we need to add to the question to allow negative numbers credits special thanks to pbrother for adding this problem and creating all test cases
find the kth largest element in an unsorted array note that it is the kth largest element in the sorted order not the kth distinct element for example given and k return note you may assume k is always valid ≤ k ≤ array's length credits special thanks to mithmatt for adding this problem and creating all test cases
given an encoded string return it's decoded string the encoding rule is k encoded string where the encoded string inside the square brackets is being repeated exactly k times note that k is guaranteed to be a positive integer you may assume that the input string is always valid no extra white spaces square brackets are well formed etc furthermore you may assume that the original data does not contain any digits and that digits are only for those repeat numbers k for example there won't be input like a or examples s a bc return aaabcbc s a c return accaccacc s abc cd ef return abcabccdcdcdef
a sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same for example these are arithmetic sequence the following sequence is not arithmetic a zero indexed array a consisting of n numbers is given a slice of that array is any pair of integers p q such that p q n a slice p q of array a is called arithmetic if the sequence a p a p a q a q is arithmetic in particular this means that p q the function should return the number of arithmetic slices in the array a example a return for arithmetic slices in a and itself
a sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same for example these are arithmetic sequences the following sequence is not arithmetic a zero indexed array a consisting of n numbers is given a subsequence slice of that array is any sequence of integers p p pk such that le p p pk n a subsequence slice p p pk of array a is called arithmetic if the sequence a p a p a pk a pk is arithmetic in particular this means that k ge the function should return the number of arithmetic subsequence slices in the array a the input contains n integers every integer is in the range of and and le n le the output is guaranteed to be less than example input output explanation all arithmetic subsequence slices are
there are n children standing in a line each child is assigned a rating value you are giving candies to these children subjected to the following requirements each child must have at least one candy children with a higher rating get more candies than their neighbors what is the minimum candies you must give
merge k sorted linked lists and return it as one sorted list analyze and describe its complexity
given a list of non negative integers arrange them such that they form the largest number for example given the largest formed number is note the result may be very large so you need to return a string instead of an integer credits special thanks to ts for adding this problem and creating all test cases
given a binary tree find its maximum depth the maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node
given a collection of intervals merge all overlapping intervals for example given return
given a string s partition s such that every substring of the partition is a palindrome return all possible palindrome partitioning of s for example given s aab return aa b a a b
implement pow x n
winter is coming your first job during the contest is to design a standard heater with fixed warm radius to warm all the houses now you are given positions of houses and heaters on a horizontal line find out minimum radius of heaters so that all houses could be covered by those heaters so your input will be the positions of houses and heaters seperately and your expected output will be the minimum radius standard of heaters note numbers of houses and heaters you are given are non negative and will not exceed positions of houses and heaters you are given are non negative and will not exceed as long as a house is in the heaters' warm radius range it can be warmed all the heaters follow your radius standard and the warm radius will the same example input output explanation the only heater was placed in the position and if we use the radius standard then all the houses can be warmed example input output explanation the two heater was placed in the position and we need to use radius standard then all the houses can be warmed
there are n gas stations along a circular route where the amount of gas at station i is gas i you have a car with an unlimited gas tank and it costs cost i of gas to travel from station i to its next station i you begin the journey with an empty tank at one of the gas stations return the starting gas station's index if you can travel around the circuit once otherwise return note the solution is guaranteed to be unique
write an efficient algorithm that searches for a value in an m x n matrix this matrix has the following properties integers in each row are sorted from left to right the first integer of each row is greater than the last integer of the previous row for example consider the following matrix  given target return true
given s s s find whether s is formed by the interleaving of s and s for example given s aabcc s dbbca when s aadbbcbcac return true when s aadbbbaccc return false
given an integer array nums find the sum of the elements between indices i and j i le j inclusive example given nums sumrange sumrange sumrange note you may assume that the array does not change there are many calls to sumrange function
given an array of integers sorted in ascending order find the starting and ending position of a given target value your algorithm's runtime complexity must be in the order of o log n if the target is not found in the array return for example given and target value return
there are a total of n courses you have to take labeled from to n some courses may have prerequisites for example to take course you have to first take course which is expressed as a pair given the total number of courses and a list of prerequisite pairs is it possible for you to finish all courses for example there are a total of courses to take to take course you should have finished course so it is possible there are a total of courses to take to take course you should have finished course and to take course you should also have finished course so it is impossible note the input prerequisites is a graph represented by a list of edges not adjacency matrices read more about how a graph is represented you may assume that there are no duplicate edges in the input prerequisites click to show more hints hints this problem is equivalent to finding if a cycle exists in a directed graph if a cycle exists no topological ordering exists and therefore it will be impossible to take all courses topological sort via dfs a great video tutorial minutes on coursera explaining the basic concepts of topological sort topological sort could also be done via bfs
implement wildcard pattern matching with support for ' ' and ' ' ' ' matches any single character ' ' matches any sequence of characters including the empty sequence the matching should cover the entire input string not partial the function prototype should be bool ismatch const char s const char p some examples ismatch aa a → false ismatch aa aa → true ismatch aaa aa → false ismatch aa → true ismatch aa a → true ismatch ab → true ismatch aab c a b → false
suppose you have n integers from to n we define a beautiful arrangement as an array that is constructed by these n numbers successfully if one of the following is true for the ith position ≤ i ≤ n in this array the number at the ith position is divisible by i i is divisible by the number at the ith position now given n how many beautiful arrangements can you construct example input output explanation the first beautiful arrangement is number at the st position i is and is divisible by i i number at the nd position i is and is divisible by i i the second beautiful arrangement is number at the st position i is and is divisible by i i number at the nd position i is and i i is divisible by note n is a positive integer and will not exceed
given an integer n generate all structurally unique bst's binary search trees that store values n for example given n your program should return all unique bst's shown below
given an integer array your task is to find all the different possible increasing subsequences of the given array and the length of an increasing subsequence should be at least example input output note the length of the given array will not exceed the range of integer in the given array is the given array may contain duplicates and two equal integers should also be considered as a special case of increasing sequence
given a singly linked list where elements are sorted in ascending order convert it to a height balanced bst
given a non empty d matrix matrix and an integer k find the max sum of a rectangle in the matrix such that its sum is no larger than k example given matrix k the answer is because the sum of rectangle is and is the max number no larger than k k note the rectangle inside the matrix must have an area what if the number of rows is much larger than the number of columns credits special thanks to fujiaozhu for adding this problem and creating all test cases
suppose leetcode will start its ipo soon in order to sell a good price of its shares to venture capital leetcode would like to work on some projects to increase its capital before the ipo since it has limited resources it can only finish at most k distinct projects before the ipo help leetcode design the best way to maximize its total capital after finishing at most k distinct projects you are given several projects for each project i it has a pure profit pi and a minimum capital of ci is needed to start the corresponding project initially you have w capital when you finish a project you will obtain its pure profit and the profit will be added to your total capital to sum up pick a list of at most k distinct projects from given projects to maximize your final capital and output your final maximized capital example input k w profits capital output explanation since your initial capital is you can only start the project indexed after finishing it you will obtain profit and your capital becomes with capital you can either start the project indexed or the project indexed since you can choose at most projects you need to finish the project indexed to get the maximum capital therefore output the final maximized capital which is note you may assume all numbers in the input are non negative integers the length of profits array and capital array will not exceed the answer is guaranteed to fit in a bit signed integer
you are a product manager and currently leading a team to develop a new product unfortunately the latest version of your product fails the quality check since each version is developed based on the previous version all the versions after a bad version are also bad suppose you have n versions n and you want to find out the first bad one which causes all the following ones to be bad you are given an api bool isbadversion version which will return whether version is bad implement a function to find the first bad version you should minimize the number of calls to the api credits special thanks to jianchao li fighter for adding this problem and creating all test cases
